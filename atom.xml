<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CarOL的小站</title>
  
  
  <link href="https://blog.scubot.com/atom.xml" rel="self"/>
  
  <link href="https://blog.scubot.com/"/>
  <updated>2024-08-20T00:57:09.091Z</updated>
  <id>https://blog.scubot.com/</id>
  
  <author>
    <name>贺翔/CarOL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MacOS中manim安装问题</title>
    <link href="https://blog.scubot.com/article/62c3/"/>
    <id>https://blog.scubot.com/article/62c3/</id>
    <published>2023-06-19T15:04:39.000Z</published>
    <updated>2024-08-20T00:57:09.091Z</updated>
    
    <content type="html"><![CDATA[<ul><li><a href="https://manim.community"><strong>manim</strong></a>是社区维护版</li><li><a href="https://pypi.org/project/manimgl/#description"><strong>manimgl</strong></a>是3Blue1Brown使用的版本</li></ul><p>一般可以使用manim社区维护版。</p><p>在MacOS上安装manim时，除了按照官网上的描述操作外，也容易出现一些其他问题。</p><p>我遇到的：</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pkg-config --print-errors --atleast-version 1.30.0 pangocairo<br></code></pre></td></tr></tbody></table></figure><p>会报错找不到<code>xproto</code>这个库。</p><p>解决方法：</p><ol type="1"><li>去 <a href="https://www.x.org/archive/individual/proto/">x.org/archive/individual/proto</a>下载源码；</li><li>生成配置文件<code>./configure --prefix=/usr/local/&lt;xxx&gt;</code></li><li>安装 <code>make install</code></li></ol><p>实际上除了<code>xproto</code>，还需要下载<code>renderproto</code>，<code>kbproto</code>和<code>xextproto</code>这几个库。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://manim.community&quot;&gt;&lt;strong&gt;manim&lt;/strong&gt;&lt;/a&gt;
是社区维护版&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://pypi.org/project/manimgl/#description</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>杂谈</title>
    <link href="https://blog.scubot.com/article/bb5c/"/>
    <id>https://blog.scubot.com/article/bb5c/</id>
    <published>2022-11-14T14:42:56.000Z</published>
    <updated>2024-08-20T00:57:09.094Z</updated>
    
    <content type="html"><![CDATA[<p>献给活着的我，以及想要了解我的人。</p><span id="more"></span><p><strong>起因</strong></p><p>俗话说三十而立，四十不惑。趁着我还未到而立之年时，想通过杂谈的方式来像《人生的枷锁》中菲利普一样总结一些阶段性的人生感悟，兴趣使然。</p><p>我曾在很多时候对一些事物突发奇想，也许是通勤途中，也许是面对他人激烈情绪波动时，也许是在某些事情迫在眉睫的压迫下，一旦有了这些突然通透的想法，我都想让它在脑中不断翻滚，仔细玩味，试图找出这些想法与我已有的认知的关系，为这些看似充满哲理的想法打上仅属于我一人的标签。但是当我试图记录下来时，我总是脑中空白，无从落笔。为了突破表达的桎梏，我开始了此次杂谈的尝试。</p><p>首先是创造表达的条件，我会主动提出一些问题，并且围绕问题力求完整地铺陈自己的观点。</p><p>在过程中，我会不断精简用词用句，整理相似的言论，将这些杂谈变得不那么杂乱无章。</p><p>最后，未来的我或者非我一定会对部分言论有不同观点，甚至强烈反对，那我执着于将思想通过文字记录下来的原因也就达到了。</p><p>如果我连自己的想法都无法完整表达，使他人充分理解，那么我将不能保证自己不会成为他人意志的附庸。</p><p><strong>对世界的认知</strong></p><p>受限于目前的科技水平，我们至今无法确定是否有地外生命的存在。因此我将讨论的内容局限在这颗小小的蓝色行星上。</p><p>从地球的诞生到今天，经过了几十亿年，而人类文明也不过几千年，科技突飞猛进的阶段仅集中在近两三百年。如今部分个体因人类取得的若干成就欣喜若狂起来，但我们其实都清楚，人类几千年的核心生存动力一直没变：争夺生存资源和阶级斗争。</p><p>只要人类从事生产，必然需要生产资料，但是生存资源是有限的，因此因争夺生产资源导致的矛盾冲突贯彻了人类文明的历史；并且人类个体之间的生产力水平存在差距，这样的差距在生产初期会造成不同生产力水平的人分为不同类别，而当人类繁衍的方式从群婚到对偶制再到现在的个体制婚姻后，以血缘关系为基础的继承制被确立了下来，从此之后在某一代人由于生产力水平不同产生的分类被其后代继承，阶级从此出现。但事实上，每个生物对其诞生的环境没有选择权，当其认识到自己天生被阶级分类后，不得利的一方便试图反抗，而得利的一方为了巩固地位会想尽方法阻止这种反抗，具体形式包括但不限于建立国家政权将压迫合法化、通过宗教信仰将压迫神圣化、武力镇压以及转移斗争矛盾等。</p><p>由此得见，人类几千年都没有变化。就算科技发展的再令人兴奋，只要人类自身的问题没有被解决，总有一天由科技发展带来的生产力提升会再次将以上矛盾激化，到那时斗争的方式将会在现在的视角下更难以想象，最终的结果只有两种：争夺生产资源带来的战争和阶级斗争进行到了人类灭亡的最后一刻；或者人类通过自身或外力解决了这两大核心问题。对于后者而言，无非也就是两种可能性：人类解放了自身的生产力，也找到了无限化生存资源的方法；或者压迫阶级和被压迫阶级中有一方选择永远不再斗争。</p><p>由于目前的我并没有能力解决以上问题，所以不如将其搁置，去思考一些其他有意思的事物，比如我是如何认知世界的。</p><p>我作为一个自然人，与其他大部分动物一样，对世界认知的方式都是通过五感（视觉、听觉、嗅觉、味觉和触觉）收集世界的信息，交由大脑等神经中枢处理，再反馈给环境。由于我对生物领域并不了解，凭借个人朴素的直觉，视觉、听觉于触觉在我感知世界的过程中扮演了更重要的角色，而事实上，前两者与计算机科学也紧密连接在了一起，随着虚拟现实技术的不断发展，触觉模拟也逐渐成了一种研究方向。在此，我仅针对“视觉”部分详细展开，介绍我对自己领域——<strong>计算机图形学</strong>的看法。</p><p><strong>为什么选择计算机图形学</strong></p><p>前几天看见了亚里士多德的一句话：“哲学始于惊讶”。这句话本身就挺让我惊讶的，因为它让我回想起了面对初中数学课本上的对“体积”的定义的感受：“物体所占空间的大小叫做体积”。</p><p>这个定义在初中阶段没什么问题，但当时的我却怎么都想不通，什么叫做“所占空间的大小”，直到有一天我突然想到，空无一物的空间本身也许就是有大小的，在这空间内放入的物体，只是抢走了原来属于空旷空间的一部分资源，而这部分被抢走的资源的多少就是物体的体积。也许这样思考并不一定是符合应试要求的，但这确实让我体验到了“惊讶”的感觉。</p><p>而后来我就将这样的一个问题种到了脑子里，直到在导师的教诲下发了芽，问题是：“空无一物的空间本身的大小是多大，虽然直观感受上这种大小是无限的，但是二维空间的无限大和三维空间的无限大是一样大吗？”。</p><p>也许任何一名大四的数学系学生和对集合论有一些研究的计算机专业的学生都可以回答出上面这个问题，不过我还是想要用欣喜若狂形容在研一的理论辅导时听到导师谈到上述问题并给出严谨推理时的心情。我并没有当场表现出来，但是在以后的方向选题和课题交流过程中，我总是时不时提到这些。也许有精力的时候我会整理一下相关资料，用自己的话较为朴素和系统地回答关于空间大小的问题。</p><p>为了更好得描述计算机图形学这个概念是如何在我人生中出现的，接下来的讨论中除了我和抽象的物体之外别无其他。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;献给活着的我，以及想要了解我的人。&lt;/p&gt;</summary>
    
    
    
    <category term="代码之外" scheme="https://blog.scubot.com/categories/%E4%BB%A3%E7%A0%81%E4%B9%8B%E5%A4%96/"/>
    
    
    <category term="杂谈" scheme="https://blog.scubot.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>四川大学软件著作权申请指南</title>
    <link href="https://blog.scubot.com/article/c555/"/>
    <id>https://blog.scubot.com/article/c555/</id>
    <published>2022-11-14T08:30:57.000Z</published>
    <updated>2024-08-20T00:57:09.092Z</updated>
    
    <content type="html"><![CDATA[<h1 id="四川大学软著申请指南">四川大学软著申请指南</h1><p>申请软件著作权时，可以将四川大学作为著作权人，自己为代理人和开发者进行申请。</p><p>申请的流程非常繁琐，不只包括中国版权保护中心网站的流程，还要根据学校的规定，走学校的部分流程。</p><p>如果需要将该软著作为自己的研究成果，需要保留好下面提到的《四川大学软件著作权申请登记表》盖章后的照片，用于确认代理人和开发者，因为最终的软著证书上只有著作权人：四川大学的字样。</p><span id="more"></span><h2 id="四川大学软件著作权申请流程">四川大学软件著作权申请流程</h2><p><strong>文字版</strong></p><ol type="1"><li>准备<strong>《源码文件》</strong>以及<strong>《软件说明书》</strong></li><li>在 <a href="https://www.ccopyright.com.cn/">中国版权保护中心</a>提交电子版文件，提交时会需要填写学校验证码</li><li>填写<a href="https://kyy.scu.edu.cn/info/2166/7540.htm"><strong>《四川大学软件著作权申请信息登记表》</strong></a>，二级单位处盖学院公章</li><li>前往四川大学<strong>科转部</strong>（望江行政楼341室）提交(3)中的表格，并索取(2)中的学校验证码</li><li>有了学校验证码之后在版权网站提交电子版，打印网站自动生成的文件，盖学校公章（也是找科转部）</li><li>准备学校法人复印件材料（申请流程见附件，在网上申请，望江行政楼自助打印）</li><li>收集好(5)和(6)的材料后按网站要求邮寄提交，等待审核</li></ol><p><strong>流程图版</strong></p><center><figure><img src="https://imgbed.scubot.com/image/flowchat.svg" alt="flowchat"><figcaption aria-hidden="true">flowchat</figcaption></figure></center><h2 id="网上办理流程注意事项">网上办理流程注意事项</h2><ul><li>办理身份：<strong>代理申请</strong></li><li>著作权人：四川大学 (121000004000091949)<img src="https://imgbed.scubot.com/image/20221101112106.png" alt="示例 " style="zoom:30%;"></li></ul><h2 id="学校法人证书申请流程">学校法人证书申请流程</h2><p>登陆：<a href="https://my.scu.edu.cn"><strong>https://my.scu.edu.cn</strong></a></p><p>点击法人证书申请（学生）项目，填写表单即可。</p><p><img src="https://imgbed.scubot.com/image/286619DA-AB4E-4666-8EED-8ADA71798C17.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;四川大学软著申请指南&quot;&gt;四川大学软著申请指南&lt;/h1&gt;
&lt;p&gt;申请软件著作权时，可以将四川大学作为著作权人，自己为代理人和开发者进行申请。&lt;/p&gt;
&lt;p&gt;申请的流程非常繁琐，不只包括中国版权保护中心网站的流程，还要根据学校的规定，走学校的部分流程。&lt;/p&gt;
&lt;p&gt;如果需要将该软著作为自己的研究成果，需要保留好下面提到的《四川大学软件著作权申请登记表》盖章后的照片，用于确认代理人和开发者，因为最终的软著证书上只有著作权人：四川大学的字样。&lt;/p&gt;</summary>
    
    
    
    <category term="SCU相关" scheme="https://blog.scubot.com/categories/SCU%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>文明与罗马文明</title>
    <link href="https://blog.scubot.com/article/ede1/"/>
    <id>https://blog.scubot.com/article/ede1/</id>
    <published>2022-11-12T06:19:40.000Z</published>
    <updated>2024-08-20T00:57:09.094Z</updated>
    
    <content type="html"><![CDATA[<p>由于最近我在读古罗马历史，对其中一些故事非常感兴趣，加之接触过《文明6》这款游戏，所以想从这款游戏的内容出发，对罗马历史做出粗略的勾勒。</p><p><strong>光荣属于希腊，伟大属于罗马</strong></p><span id="more"></span><p>需要提前说明的是，我目前仅读过以下书籍，并不包含非常严格的一手/二手史料，所以我对历史的描述必然会出现真实性的偏差，当个故事听就好。</p><ul class="task-list"><li><label><input type="checkbox" checked="">《罗马人的故事》 ——盐野七生</label></li><li><label><input type="checkbox" checked="">《罗马共和国》 ——牛津通识读本</label></li><li><label><input type="checkbox" checked="">《奥古斯都》 ——约翰·威廉斯</label></li></ul><h2 id="文明6-设定">文明6 设定</h2><p>《文明》这款游戏中有诸多玩家可以选择的历史文明，选择后可以模拟从远古时期到中世纪再到现代、原子能时代、信息时代乃至未来时代的一系列变化历程。</p><h3 id="与罗马相关的人物">与罗马相关的人物</h3><p>每个文明都有一个领袖，其中罗马的文明领袖就是图拉真大帝。罗马文明在图拉真统治时期达到了最大的版图模块，罗马人可以骄傲得将地中海称作Marenostrum（我们的海）；且由于图拉真还有个爱好，喜欢大浴场，他在位时期修建了很多公共基础设施，其中包括了很多大浴场，所以《文明6》中罗马的一大特色建筑就是浴场。</p><p>但《文明》中同一个文明不一定只有一个领袖，比如中华帝国的领袖就有秦始皇和忽必烈两人，而罗马文明延续了两千多年，却只设置了一个领袖，显然这一个领袖无法概括罗马文明的全部。而更让人费解的是，提到罗马领袖，我想绝大部分人脑海中第一反应出来的名字都不会是图拉真，而是西方帝国最高统治权的象征、苏丹和沙皇的词源——盖乌斯·尤里乌斯·凯撒。</p><img src="https://imgbed.scubot.com/image/20221112143553.png"><center><p>图拉真时期的罗马版图</p></center><p>其实《文明6》中并非没有凯撒的身影，在游戏结束之后，系统会对玩家在这一局中的操作与决策评分，共分有20个等级，每个等级都对应着一个历史伟人。我印象中第十一名是二战时期法国的戴高乐，第四名是丘吉尔，第二名是巴比伦的汉谟拉比，第一名就是凯撒。由此可见凯撒在制作组心中具有不一样的地位，他们并没有让凯撒成为游戏中实际存在的领袖，或者是伟人系统中的大将军，赋予他某种加成能力，而是将凯撒变作一种目标，一种只可企及不可超越的目标。</p><p>说到《文明6》中的伟人系统，就不得不提到两位与罗马相关的人物，其中之一是大将军<strong>汉尼拔·巴卡</strong>，又被后世誉为西方战略之父，他在与罗马的第二次布匿战争期间率领几万人和几十头战象翻阅阿尔卑斯山的壮举被载入史册，这位人物我们之后还会提到。</p><p>而另一位就显得与众不同，他就是与凯撒、庞培齐名<strong>克拉苏</strong>，这三者组成的罗马前三头同盟在公元前50年前拥有罗马绝大部分的权力，克拉苏也是率军打仗的将领，他最为人熟知的就是率兵镇压了广为人知的斯巴达克斯角斗士起义，不过最终克拉苏在东征安息帝国时兵败被杀，据说还是被敌人灌了黄金液体而死，用于讽刺这位将军的贪财，事实上克拉苏也确实是罗马当时的首富，因为足够富裕，所以为了提升政治地位就必须带兵打仗，但毕竟不是将军的料子，最后落得如此下场，也许《文明6》的制作组也想讽刺克拉苏，又或者是点明他的本质，所以将克拉苏设为了伟人中的大商人，而不是大将军。《文明6》中与罗马相关的伟人应该还有很多，只不过这两个是我实际注意到的。</p><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="https://imgbed.scubot.com/image/20221112151020.png" alt="凯撒"></div><div class="group-image-wrap"><img src="https://imgbed.scubot.com/image/20221112151033.png" alt="庞培"></div><div class="group-image-wrap"><img src="https://imgbed.scubot.com/image/20221112151048.png" alt="克拉苏"></div></div></div><center><p>罗马前三头同盟：凯撒、庞培、克拉苏（由左至右）</p></center><h3 id="与罗马相关的文明">与罗马相关的文明</h3><p>在《文明6》中与罗马相关的文明有很多，比如被凯撒征服的<strong>高卢</strong>，也是<strong>法国</strong>的前身（游戏里高卢和法国是算作两种文明）。还有灭亡了东罗马帝国的<strong>奥斯曼帝国</strong>，以及东罗马<strong>拜占庭帝国</strong>，除此之外还有罗马精神（但不是种族）的延续：<strong>神圣罗马帝国（德国）</strong>和<strong>俄罗斯</strong>。与罗马相关的文明如此之多，这里还不包括曾被罗马纳入版图的希腊诸城邦和埃及等，以至于有种说法，在游戏中随机文明开局，很大可能就是罗马内战。</p><p>以上有太多文明与罗马有关系，但是我觉得最值得品味的一个文明，是与罗马间接相关的<strong>腓尼基</strong>。</p><h2 id="狄多的诅咒">狄多的诅咒</h2><p>腓尼基本是巴尔干半岛的一个国家，与其说是国家，不如说是一个种族，拥有一定的主权。在公元前十三世纪前后，腓尼基的公主狄多受到其兄的迫害流亡海外，来到了北非的一片沿海之地，靠近如今的突尼斯，建立了城市迦太基。</p><p>而同一时期，希腊各城邦因为美人海伦等一系列原因，攻打了东方的特洛伊城十年之久，最终使用了我们耳熟能详的“特洛伊的木马”一计，攻下了特洛伊城。特洛伊王的女婿埃涅阿斯率领随从潜逃，也正好来到了狄多公主建立的迦太基，并与之坠入爱河。</p><center><img src="https://imgbed.scubot.com/image/20221112153701.png"></center><center><p>狄多和埃涅阿斯的逃亡路线</p></center><p>但是某一天，埃涅阿斯接到神谕，说他应该建立一个更伟大的文明，不应该屈居于迦太基，所以他抛弃了狄多公主到了亚平宁半岛（如今的意大利），与当地的王联姻。狄多知道之后非常愤怒，站在祭祀台上诅咒迦太基与埃涅阿斯的种族世代为敌，说完自刎而死。</p><p>在埃涅阿斯定落脚意大利的400年之后，他的后代罗慕路斯和雷慕斯于公元前753年建立了罗马城，从此罗马进入王政时期。随着罗马文明的发展，在罗马的第七任国王“高傲者”塔克文被<strong>布鲁图斯</strong>和克劳迪乌斯家族推翻之后，罗马进入了共和时期。</p><p>在公元前3世纪到公元前2世纪，在当时还不属于罗马领土的西西里岛上的两个希腊城邦墨西拿和叙拉古（也称锡拉库萨）起了争执，而这两者为了解决矛盾，分别向罗马和迦太基求援。罗马是典型的农耕文明，从未经历过海战，而迦太基本就是沿海的城市，国内经济以海上贸易为主，且拥有当时地中海上的精英舰队，考虑到种种现实问题，罗马决定举行公民大会，由罗马公民投票决定是否对西西里岛出兵，同时向迦太基宣战。而投票的结果也彰显了罗马的野心，他们不能接受其他国家对周遭城邦的侵占，毅然向迦太基发出战争通告，史称第一次布匿战争。</p><p>战争一旦爆发就很难停下，尤其是在中世纪前，两股势力之间的战争往往都会被冠以“第几次”这样的指代，而罗马和迦太基之间的布匿战争就进行了三次，最终在公元前146年，罗马的执政官小西庇阿奉元老院话事人大加图的主张，毁灭了迦太基，并且在废墟上撒盐诅咒。至此狄多公主的诅咒是以自己的国家迦太基被灭亡而结束了。</p><p>但是如果仔细分析布匿战争的过程，尤其是第二次布匿战争时，迦太基的将军汉尼拔对罗马军事力量进行了极大的打击，以至于不得不任命特殊期的独裁官以取代共和时期的两名执政官来指挥战斗。而且汉尼拔被后事战争学家称作西方战略之父，不光是因为其战术的高超，更是因为他洞察到了罗马共和时期的真正强大之处在于罗马与意大利半岛其他城邦的同盟者关系，汉尼拔入侵意大利的最主要目的就是瓦解这种同盟关系，使得罗马在根本上崩溃，但是第二次布匿战争还是以大西庇阿大败汉尼拔而宣告罗马的胜利。</p><p>不过因为汉尼拔对罗马的高强度打击，使得罗马开启了长时间任命独裁官的先例，并且让罗马士兵数量激增，导致战后老兵的安置成了很大的问题，为了解决这个问题，先是出现了格拉古兄弟的土地改革，但是由于触犯了贵族元老们的利益，最后以格拉古兄弟惨死而告终，而又因为格拉古兄弟改革中关于同盟国的罗马公民权提案被元老院否定，导致罗马的同盟国叛变，爆发了同盟国战争。为了平息战争，罗马人选举了没有任何政治背景的军人马略作为执政官，进行军队改革。</p><p>马略改革的最大特点就是把征兵制改成了募兵制，用于吸收战后的老兵继续作战，而不是以前按照居民财富阶级直接征召，虽然马略改革成功解决了同盟国战争的问题，但是直接为后来的苏拉独裁、凯撒夺权和屋大维称帝奠定了基调：军队私有化。直接加速了罗马由共和转帝制的进程。</p><p>所以从历史的全局视角来看，狄多的诅咒确实应验了，因为迦太基与罗马的战争间接破坏了罗马的共和体制，罗马转为帝国之后极为动荡，最后分裂成东西两个帝国，西罗马帝国在欧洲的民族大迁徙运动中被悄然吞噬，东罗马于公元1453年被奥斯曼帝国击败，整整2100年的罗马从此消失。罗马的精神造在共和体制被破坏时就在不断自我消逝，最后自我解体，与迦太基一样被毁灭了。</p><h2 id="一些趣事">一些趣事</h2><p><strong>布鲁图斯的共和使命</strong></p><p>与狄多公主的诅咒同样有宿命感的是，推翻罗马王政，建立共和的叫布鲁图斯，而几百年后，正是他们家的后代，小布鲁图斯，打着维护共和的名义刺杀了凯撒，直接加速了罗马帝制的进程。</p><p><strong>"尤里卡 Eureka"的由来</strong></p><p>第一次布匿战争中的叙拉古位处西西里岛的东南方向，是希腊在西西里岛的殖民城邦。第一次布匿战争期间，叙拉古的国王希伦在觉得大势已去之时与罗马讲和，主动提供罗马驻西西里岛军队的补给，并一直与罗马保持同盟关系直到去世。</p><center><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/dc/Sicilia_-_prima_guerra_punica_zh.svg/800px-Sicilia_-_prima_guerra_punica_zh.svg.png"></center><center><p>第一次布匿战争时期的西西里岛</p></center><p>这位国王生前与叙拉古的一名古希腊科学家保持密切联系，曾委托他鉴定金冠是否参有杂质。接下来的故事我们耳熟能详：这位科学家在洗澡时灵光一现，想到了可以通过排出的水的质量来计算水中物体的质量，并且喊出了那句“Eureka”，意为“我知道了”。《文明6》中保留了尤里卡的设定，即在解锁某项科技时，只要完成该科技指定的尤里卡条件，解锁科技所需要的消耗就会大幅降低。</p><p>值得一提的是，在第二次布匿战争期间，由老国王希伦的去世产生的动荡的政治势力被汉尼拔利用，叙拉古又站在反抗罗马的一边。在罗马镇压叙拉古叛乱，攻入城池时，罗马将军曾嘱咐士兵，不允许迫害这名科学家。但是由于士兵只知道他的名字叫阿基米德，并不清楚他的样子，所以在催促一名拿木棍在地上写字的老人离开房间无果后，一名士兵毫不犹豫得将剑刃刺向了他的脖颈。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于最近我在读古罗马历史，对其中一些故事非常感兴趣，加之接触过《文明6》这款游戏，所以想从这款游戏的内容出发，对罗马历史做出粗略的勾勒。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;光荣属于希腊，伟大属于罗马&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="代码之外" scheme="https://blog.scubot.com/categories/%E4%BB%A3%E7%A0%81%E4%B9%8B%E5%A4%96/"/>
    
    
    <category term="罗马" scheme="https://blog.scubot.com/tags/%E7%BD%97%E9%A9%AC/"/>
    
    <category term="游戏" scheme="https://blog.scubot.com/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>Mesh Deformation Transfer</title>
    <link href="https://blog.scubot.com/article/4581/"/>
    <id>https://blog.scubot.com/article/4581/</id>
    <published>2022-10-20T06:39:27.000Z</published>
    <updated>2024-08-20T00:57:09.091Z</updated>
    
    <content type="html"><![CDATA[<h1 id="deformation-transfer-for-triangle-mesh">Deformation Transfer ForTriangle Mesh</h1><h2 id="概述">概述</h2><p><strong>问题描述</strong></p><p>对于两个具有一定视觉相似度的三角网格：原网格 <span class="math inline">\(S_0\)</span> 和目标网格 <span class="math inline">\(T_0\)</span>，根据原网格已知的变形序列 <span class="math inline">\(\mathcal S=\{S_0,\,\dots,\, S_{|\mathcalS|}\}\)</span>，生成目标网格的对应的变形序列<span class="math inline">\(\mathcal T=\{T_0,\, \dots, T_{|\mathcalS|}\}\)</span>。</p><figure><img src="https://imgbed.scubot.com/image/20221020144729.png" alt="banner"><figcaption aria-hidden="true">banner</figcaption></figure><span id="more"></span><p><strong>问题假设</strong></p><ol type="1"><li><span class="math inline">\(\mathcal S\)</span> 和 <span class="math inline">\(\mathcal T\)</span>中的网格分别具有相同的拓扑结构，但两个集合对应网格之间不要求。</li><li><span class="math inline">\(S_0\)</span> 与 <span class="math inline">\(T_0\)</span>应当具有一定的视觉相似度，并且相关点对通过人为标记的方式体现。</li></ol><p><strong>基本思想</strong></p><ol type="1"><li>根据人为标定的标记点，计算由 <span class="math inline">\(S_0\)</span> 到 <span class="math inline">\(T_0\)</span> 的三角面片对应关系 <span class="math inline">\(M=\{(s_0,\,t_0),\, \dots,\,(s_{\lvert M\rvert},\,t_{\lvert M\rvert})\}\)</span>。</li><li>对 <span class="math inline">\(S_i,\, i\in \{1,\, \dots ,\,|\mathcal S|\}\)</span> ，由于 <span class="math inline">\(S_i\)</span>与 <span class="math inline">\(S_0\)</span>具有相同的拓扑，可以根据对应关系<span class="math inline">\(M\)</span>，将<span class="math inline">\(S_i\)</span>每个三角面的变换作用到<span class="math inline">\(T_0\)</span>，加上一些约束条件，得到变形后的 <span class="math inline">\(T_i\)</span> 。</li></ol><h2 id="三角面变换">三角面变换</h2><p>在三维空间中，对于三角面<span class="math inline">\(F_i =\left[v_0,\, v_1,\, v_2\right]\)</span> 到另一个三角面<span class="math inline">\(\widetilde{F_i} =\left[\widetilde v_0,\,\widetilde v_1,\, \widetilde v_2 \right]\)</span>的仿射变换可以分解为线型部分<span class="math inline">\(Q_i\)</span>和非线性部分 <span class="math inline">\(\mathbfd_i\)</span>。求解该仿射变换需要用四对点到点的关系，对每个三角面引入第四个点：<span class="math display">\[v_3 = v_0 +(v_1 −v_0) \times (v_2 −v_0) \big / \sqrt{|(v_1 −v_0) \times(v_2 −v_0)|}\]</span></p><p>线性部分<span class="math inline">\(Q_i = \widetilde V_i{V_i}^{-1}\)</span>，其中<span class="math inline">\(V_i = \left[v_1 -v_0\quad v_2 - v_0 \quad v_3-v_0\right]\)</span></p><h2 id="对应关系计算">对应关系计算</h2><p>根据标定点，将 <span class="math inline">\(S_0\)</span>在保持拓扑不变的前提下变形为 <span class="math inline">\(T_0\)</span>。</p><p>根据三角面变换中的定义，将<span class="math inline">\(S_0\)</span>中每个三角面的第四个点加到顶点序列之后：<span class="math display">\[x = \left(\underbrace{v_0,\, v_1,\, \dots,\,v_{n-1}}_{\text{原始顶点}},\, \underbrace{v_{n},\, \dots,\,v_{n+m-1}}_{\text{新增顶点}} \right)\]</span> 其中<span class="math inline">\(n\)</span>为<span class="math inline">\(S_0\)</span>中原始顶点的个数，<span class="math inline">\(m\)</span>为三角面个数，<span class="math inline">\(x \in \mathbb R^{3\times (n+m)}\)</span>。</p><p>通过改动<span class="math inline">\(x\)</span>，来实现<span class="math inline">\(S_0\)</span>到<span class="math inline">\(T_0\)</span>的变形，具体表现为定义损失函数，最小二乘法搜索最优解：<span class="math display">\[\min_{\widetilde x} (w_S E_S,\, w_IE_I,\, w_CE_C) \\\text{约束标记点对中原网格顶点与目标网格顶点相同}\]</span></p><table style="width:100%;"><thead><tr><th style="text-align: left;">损失项</th><th style="text-align: left;">表达式</th><th style="text-align: left;">备注</th></tr></thead><tbody><tr><td style="text-align: left;">平滑性<br>(smoothness)</td><td style="text-align: left;"><span class="math inline">\(E_S(x) =\sum_{Q_i}{ \sum_{Q_j \in \text{adj}(Q_i)}{\lVert Q_i-Q_j\rVert_F^2}}\)</span></td><td style="text-align: left;">对每一个三角面，周围三角面的形变应该尽量与之相似</td></tr><tr><td style="text-align: left;">不变性<br>(identity)</td><td style="text-align: left;"><span class="math inline">\(E_I(x) =\sum_{Q_i}{\lVert Q_i - \mathbf I \rVert_F^2}\)</span></td><td style="text-align: left;">每个三角面的形变尽可能小</td></tr><tr><td style="text-align: left;">最近点损失</td><td style="text-align: left;"><span class="math inline">\(E_C(x;\,c_0,\,\dots,\,c_n)=\sum_i{\lVert v_i -c_i\rVert^2_F}\)</span></td><td style="text-align: left;">原网格的每个顶点都应该尽可能贴近与目标网格的最近点</td></tr></tbody></table><p>当<span class="math inline">\(S_0\)</span>在保持拓扑不变的情况下变形为接近 <span class="math inline">\(T_0\)</span>后，计算两个网格三角面之间的对应关系<span class="math inline">\(M\)</span>。</p><blockquote><p>对<span class="math inline">\(S_0\)</span>中的每个三角面，在<span class="math inline">\(T_0\)</span>中至少存在一个三角面与之存在最近关系，反之亦然。所以两个网格中三角面的对应关系为多对多，并非映射。</p></blockquote><h2 id="形变迁移">形变迁移</h2><p>在有原网格与目标网格三角面的对应关系<span class="math inline">\(M\)</span>, 以及原网格 初始网格<span class="math inline">\(S_0\)</span> 与形变网格<span class="math inline">\(S_i\)</span>的每个三角面形变关系后，我们可以直接将<span class="math inline">\(S_0\)</span> 到<span class="math inline">\(S_i\)</span>的形变迁移到<span class="math inline">\(T_0\)</span> 上，得到<span class="math inline">\(T_i\)</span>：</p><p><span class="math display">\[\min_{Q_i+\mathbf d_i} \sum_{j=0}^{ | M | -1} { \lVert \mathbf S_{s_j}-\mathbf T_{t_j}\rVert_F^2} \\\text{约束 }Q_j\, v_i + \mathbf {d}_j= Q_k \, v_i + \mathbf d_k,\quad\forall i,\forall j,k\in\text{adj}(v_i)\]</span></p><p>这里的<span class="math inline">\(\mathbfS_{s_j}\)</span>表述为网格<span class="math inline">\(S_i\)</span>中标号为<span class="math inline">\(s_j\)</span>的三角形的变换<span class="math inline">\(Q_{s_j}\)</span>，<span class="math inline">\(T_{t_j}\)</span>同理。</p><p>对于实际求解，可以将上述对三角面变换的逼近转换到对顶点变换的逼近。</p><blockquote><p>由于三角面变换逼近时，可能会出现边缘撕裂的情况，所以需要添加三角形的邻域约束。而转用顶点表达时，通过同一网格类型拓扑不变的假设，蕴含了变换后的网格不会出现边缘撕裂。</p></blockquote><p>具体的顶点公式推导在后面。</p><h2 id="细节推导">细节推导</h2><h3 id="三角面变换-1">三角面变换</h3><p>以上描述的优化函数大多都是用三角面的形变表示，而优化目标是顶点序列<span class="math inline">\(x\)</span>，需要进行推导将三角面的形变转换为关于顶点序列<span class="math inline">\(x\)</span> 的表达式，即。 <span class="math display">\[Q_i = \widetilde V_i\, {V_i}^{-1} \quad\xrightarrow[]{\text{展开顶点序列 }x} \quad Q_i= x\,\hat{V}_i^{-1}\]</span> <strong>计算展开<span class="math inline">\(x\)</span></strong> <span class="math display">\[\begin{align*}\underset{3\times 3}{Q_i} &amp;= \widetilde V_i\, {V_i}^{-1} \\[2ex]     &amp;= \begin{bmatrix} \widetilde v_1^i - \widetilde v_0^i &amp;\widetilde v_2^i - \widetilde v_0^i &amp; \widetilde v_3^i - \widetildev_0^i \end{bmatrix} \, {V_i}^{-1} \\[2ex]     &amp;= \begin{bmatrix} \widetilde v_1^i &amp; \widetilde v_2^i&amp; \widetilde v_3^i \end{bmatrix}\, {V_i}^{-1} -            \begin{bmatrix} \widetilde v_0^i &amp; \widetilde v_0^i&amp; \widetilde v_0^i \end{bmatrix}\, {V_i}^{-1}\\[2ex]     &amp;= \begin{bmatrix} \widetilde v_0 &amp; \widetilde v_1 &amp;\dots &amp; \widetilde v_{n+m-1} \end{bmatrix}     \begin{bmatrix}&amp;\dots\\0 &amp; 0 &amp; 0\\ &amp; \dots\\1&amp;0&amp;0\\&amp;\dots&amp;\\0&amp;1&amp;0\\&amp;\dots&amp;\\0&amp;0&amp;1\\&amp;\dots\end{bmatrix}     {V_i}^{-1}     -     \begin{bmatrix} \widetilde v_0 &amp; \widetilde v_1 &amp; \dots&amp; \widetilde v_{n+m-1} \end{bmatrix}     \begin{bmatrix}&amp;\dots\\1&amp;1&amp;1\\&amp;\dots\\0&amp;0&amp;0\\&amp;\dots&amp;\\0&amp;0&amp;0\\&amp;\dots&amp;\\0&amp;0&amp;0\\&amp;\dots\end{bmatrix}    {V_i}^{-1}    \\[2ex]    &amp;=\begin{bmatrix} \widetilde v_0 &amp; \widetilde v_1 &amp;\dots &amp; \widetilde v_{n+m-1} \end{bmatrix}    \begin{bmatrix}&amp;\dots\\-1&amp;-1&amp;-1\\&amp;\dots\\1&amp;0&amp;0\\&amp;\dots&amp;\\0&amp;1&amp;0\\&amp;\dots&amp;\\0&amp;0&amp;1\\&amp;\dots\end{bmatrix}{V_i}^{-1} \\[2ex]    &amp;= x \, \hat{V}_i^{-1}\end{align*}\]</span></p><h3 id="一般的目标函数">一般的目标函数</h3><p>对于一般情况，期望在保持原网格拓扑不变的同时满足每个三角面的变形目标<span class="math inline">\(C_i\)</span>，写作： <span class="math display">\[\begin{align*}\sum_{i=0}^{\lvert M \rvert-1}{\big\lVert Q_i -C_i\big\rVert_F^2} &amp;=\sum_{i=0}^{\lvert M \rvert-1}{\big\lVert x\, \hat{V}_i^{-1} -C_i\big\rVert_F^2} \\[2ex]&amp; =\sum_{i=0}^{\lvert M \rvert-1}{\begin{Vmatrix} \left( x\, \hat{V}_i^{-1} - C_i\right)^T\end{Vmatrix}_F^2} \\[2ex]&amp;= \sum_{i=0}^{\lvert M \rvert-1}{\begin{Vmatrix}\left(\hat{V}_i^{-1}\right)^T\, x^T-C_i^T\end{Vmatrix}_F^2}\\[2ex]&amp;= \begin{Vmatrix}\begin{pmatrix}\left(\hat{V}_0^{-1}\right)^T \\\left(\hat{V}_1^{-1}\right)^T \\\dots\\\left(\hat{V}_{\lvert M \rvert-1}^{-1}\right)^T\end{pmatrix}\,x^T -\begin{pmatrix}C_0^T \\C_1^T \\\dots \\C_{\lvert M \rvert-1}^T\end{pmatrix}\end{Vmatrix}_F^2 \\[2ex]&amp;=\begin{Vmatrix}A\,x^T - b\end{Vmatrix}_F^2\end{align*}\]</span> 即目标函数变为 <span class="math inline">\(E (x) =\begin{Vmatrix} A\, x^T - b \end{Vmatrix}_F^2\)</span>的形式，使用最小二乘法<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://eeweb.engineering.nyu.edu/iselesni/lecture_notes/least_squares/least_squares_SP.pdf">[1]</span></a></sup>，得到<span class="math display">\[\frac{\partial E(x)}{\partial x} = \frac{\partial {\left( x^TA^TA\,x-2b^TA\,x+b^T\,b\right)} }{\partial x} = 2A^TA\,x - 2A^T b = 0\\[2ex]A^T A\,x = A^T b\]</span></p><h3 id="具体的目标函数">具体的目标函数</h3><p><strong>平滑性损失</strong> <span class="math display">\[\begin{align*}E_S(x)&amp;=\sum_{Q_i}{ \sum_{Q_j \in \text{adj}(Q_i)}{\lVert Q_i-Q_j\rVert_F^2}} \\[2ex]&amp;=\begin{Vmatrix}\begin{pmatrix}\left(\hat{V}_0^{-1} - \hat{V}_{j_0}^{-1}\right)^T \\\left(\hat{V}_0^{-1} - \hat{V}_{j_1}^{-1}\right)^T \\\dots \\\left(\hat{V}_0^{-1} - \hat{V}_{j_{\lvert \text{adj}(Q_i)\rvert-1}}^{-1}\right)^T \\\left(\hat{V}_1^{-1} - \hat{V}_{j_0}^{-1}\right)^T\\\dots\end{pmatrix}\, x^T - 0\end{Vmatrix}_F^2=\begin{Vmatrix}A_S\, x^T - b_S\end{Vmatrix}_F^2\end{align*}\]</span> 其中<span class="math inline">\(A_S \in \mathbb R^{3q\times{(n+m)}}\)</span>， <span class="math inline">\(b_S \in \mathbbR^{3q\times 3}\)</span>，<span class="math inline">\(q = \sum_i {\lvert\text{adj}(Q_i)\rvert}\)</span>。</p><p><strong>不变性损失</strong> <span class="math display">\[\begin{align*}E_I(x) &amp;= \sum_{Q_i}{\lVert Q_i - \mathbf I \rVert_F^2}\\[2ex]&amp;= \begin{Vmatrix}\begin{pmatrix}\left(\hat{V}_0^{-1}\right)^T \\\left(\hat{V}_1^{-1}\right)^T \\\dots\\\left(\hat{V}_{m-1}^{-1}\right)^T\end{pmatrix}\,x^T -\begin{pmatrix}\mathbf I \\\mathbf I \\\dots \\\mathbf I\end{pmatrix}\end{Vmatrix}= \begin{Vmatrix}A_I\, x^T - b_I\end{Vmatrix}_F^2\end{align*}\]</span> 其中<span class="math inline">\(A_I \in \mathbb R^{3m \times(n+m)}\)</span>，<span class="math inline">\(b_I \in \mathbb R^{3m\times3}\)</span>。</p><p><strong>最近点损失</strong> <span class="math display">\[\begin{align*}E_C(x;\, c_0,\,\dots,\,c_n)&amp;=\sum_i{\lVert v_i -c_i\rVert^2} \\[2ex]&amp;=\begin{Vmatrix}\mathbf I\, x^T - \begin{pmatrix}C_0^T \\C_1^T \\\dots \\C_{m+n-1}^T\end{pmatrix}\end{Vmatrix}_F^2 = \begin{Vmatrix}A_C \, x^T -b_C \end{Vmatrix}_F^2\end{align*}\]</span> 其中<span class="math inline">\(A_C \in \mathbb R^{3m \times(n+m)}\)</span>，<span class="math inline">\(b_C \in \mathbb R^{3m\times3}\)</span>。</p><blockquote><p>为了统一使用变量<span class="math inline">\(x^T\)</span>，需要有<span class="math inline">\(n+m\)</span>个点的形式，但实际上只需要计算前<span class="math inline">\(n\)</span>个顶点的最近点。</p></blockquote><p><strong>形变迁移损失</strong> <span class="math display">\[\begin{align*}E_Q(x)&amp;=\sum_{j=0}^{\lvert M\rvert -1} {\lVert \mathbf S_{s_j}-\mathbf T_{t_j}\rVert_F^2}\\[2ex]&amp;=\sum_{j=1}^{\lvert M\rvert}{\begin{Vmatrix}\mathbf S_{s_j}^T - {\hat{V}_{t_j}^{-1}}^T\, x^T\end{Vmatrix}_F^2}\\[2ex]&amp;=\begin{Vmatrix}-\begin{pmatrix}\left(\hat{V}_{t_0}^{-1}\right)^T \\\left(\hat{V}_{t_1}^{-1}\right)^T \\\dots\\\left(\hat{V}_{t_{\lvert M \rvert-1}}^{-1}\right)^T\end{pmatrix}\,x^T+\begin{pmatrix}\mathbf S_{s_0}^T \\\mathbf S_{s_1}^T \\\dots \\\mathbf S_{s_{\lvert M\rvert -1}}^T\end{pmatrix}\end{Vmatrix}_F^2\\[2ex]&amp;= \begin{Vmatrix}A_Q\, x^T - b_Q\end{Vmatrix}_F^2\end{align*}\]</span> 其中<span class="math inline">\(A_Q \in \mathbb R^{3\vertM\rvert \times (n+m)}\)</span>，<span class="math inline">\(b_Q \in\mathbb R^{3\vert M\rvert \times 3}\)</span>，<span class="math inline">\(\lvert M\rvert\)</span>是对应关系中元素的个数，满足<span class="math inline">\(\lvert M\rvert \ge m\)</span>。</p><h2 id="实验">实验</h2><h3 id="注意事项">注意事项</h3><p><strong>对应关系求解: 标记点约束</strong></p><p>在求解<span class="math inline">\(\min_x E_S\)</span>、<span class="math inline">\(\min_xE_I\)</span>和<span class="math inline">\(\min_x E_Q\)</span>时，需要约束<span class="math inline">\(S_0\)</span>和<span class="math inline">\(T_0\)</span>对应的标记点相同： <span class="math display">\[\begin{align*}A^T\,A\, x^T &amp;= A^T\, b\\[2ex]({A^u})^T\,A^u\, \left(x^u\right)^T + ({A^m})^T\, A^m\,\left(\widetilde{x}^m\right)^T &amp;= A^T\, b\\[2ex]({A^u})^T\,A^u\, \left(x^u\right)^T &amp;= A^T\,b - ({A^m})^T\,A^m\,\left(\widetilde{x}^m\right)^T\end{align*}\]</span> 对于<span class="math inline">\(S_0\)</span>，<span class="math inline">\(A^u\)</span>、<span class="math inline">\(x^u\)</span>分别为未标记点的系数矩阵以及顶点序列，<span class="math inline">\(A^m\)</span>、<span class="math inline">\(x^m\)</span>为已标记点的系数矩阵以及顶点序列，<span class="math inline">\(\widetilde{x}^m\)</span>为<span class="math inline">\(T_0\)</span>中已标记点的顶点序列。</p><p>再求解出<span class="math inline">\(x^u\)</span>后再根据约束条件<span class="math inline">\(x^m = \widetilde{x}^m\)</span> 计算出结果 <span class="math inline">\(\widetilde{x}\)</span>。</p><p><strong>对应关系求解: 目标函数组合与迭代</strong></p><p>对应关系计算时，可以将相关目标函数写在一起： <span class="math display">\[\widetilde{x} = \underset{x}{\arg \min}\begin{Vmatrix}\begin{pmatrix}w_SA_S \\w_IA_I\\w_CA_C\end{pmatrix}\,x^T -\begin{pmatrix}w_S b_S\\w_I b_I\\w_C b_C\end{pmatrix}\end{Vmatrix}_F^2\]</span> 其中<span class="math inline">\(w_S=1.0\)</span>，<span class="math inline">\(w_I=0.001\)</span>，<span class="math inline">\(w_C=[0,\,1\, \dots,\, 5000]\)</span>。</p><p><strong>稀疏线性方程组求解<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://zhuanlan.zhihu.com/p/479913328">[2]</span></a></sup></strong></p><ol type="1"><li>直接求解<ul><li>LU分解：<span class="math inline">\(Ax=b \Longrightarrow LUx =b\)</span></li><li>Cholesky分解<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="https://zhuanlan.zhihu.com/p/112091443">[3]</span></a></sup>：<span class="math inline">\(Ax = b \Longrightarrow L^TLx=b\)</span></li></ul></li><li>间接求解<ul><li>Jacobi method / Gauss-Seidel method</li></ul></li></ol><p><strong>优化</strong></p><ol type="1"><li>稀疏矩阵的计算：乘法、转置、切片、拼接和索引。</li><li>稀疏方程组求解。</li><li>计算<span class="math inline">\(E_C\)</span>时，最近点的计算。</li><li>计算对应关系<span class="math inline">\(M\)</span>时，最近三角面重心以及法线夹角的计算。</li></ol><h3 id="计算流程">计算流程</h3><p>计算形变迁移，本质上在优化四个目标函数：<span class="math inline">\(E_S\)</span>、<span class="math inline">\(E_I\)</span>、<span class="math inline">\(E_C\)</span>和<span class="math inline">\(E_Q\)</span>。其中系数矩阵几乎都包含<span class="math inline">\(\hat{V}^{-1}\)</span>的计算。</p><section class="footnotes"><h2>参考</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>https://eeweb.engineering.nyu.edu/iselesni/lecture_notes/least_squares/least_squares_SP.pdf<a href="#fnref:1" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>https://zhuanlan.zhihu.com/p/479913328<a href="#fnref:2" rev="footnote" class="footnote-backref">↩︎</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>https://zhuanlan.zhihu.com/p/112091443<a href="#fnref:3" rev="footnote" class="footnote-backref">↩︎</a></span></span></li></ol></div></section>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;deformation-transfer-for-triangle-mesh&quot;&gt;Deformation Transfer For
Triangle Mesh&lt;/h1&gt;
&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;问题描述&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于两个具有一定视觉相似度的三角网格：原网格 &lt;span class=&quot;math inline&quot;&gt;\(S_0\)&lt;/span&gt; 和目标网格 &lt;span class=&quot;math inline&quot;&gt;\(T_0\)&lt;/span&gt;，根据原网格已知的变形序列 &lt;span class=&quot;math inline&quot;&gt;\(\mathcal S=\{S_0,\,\dots,\, S_{|\mathcal
S|}\}\)&lt;/span&gt;，生成目标网格的对应的变形序列&lt;span class=&quot;math inline&quot;&gt;\(\mathcal T=\{T_0,\, \dots, T_{|\mathcal
S|}\}\)&lt;/span&gt;。&lt;/p&gt;
&lt;figure&gt;
&lt;img src=&quot;https://imgbed.scubot.com/image/20221020144729.png&quot; alt=&quot;banner&quot;&gt;
&lt;figcaption aria-hidden=&quot;true&quot;&gt;banner&lt;/figcaption&gt;
&lt;/figure&gt;</summary>
    
    
    
    
    <category term="CG" scheme="https://blog.scubot.com/tags/CG/"/>
    
  </entry>
  
  <entry>
    <title>曲面参数化概述</title>
    <link href="https://blog.scubot.com/article/45ef/"/>
    <id>https://blog.scubot.com/article/45ef/</id>
    <published>2022-09-14T00:08:12.000Z</published>
    <updated>2024-08-20T00:57:09.094Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>对于如何确定本篇文章的内容涵盖范围这个问题，我想了很久，最终打算从最基本的<strong>什么是形状（shape）</strong>这个问题谈起。</p><span id="more"></span><h2 id="形状的本质">形状的本质</h2><p>在拓扑相关的理论中，<strong>形状</strong>是指<span class="math inline">\(n-1\)</span>维流形（manifold）在<span class="math inline">\(n\)</span>维流形中的嵌套。</p><p>流形是连续的，详细的定义也较为复杂，可以从以下两点来辅助理解流形的概念：</p><ol type="1"><li><span class="math inline">\(n\)</span> 维流形的局部与 <span class="math inline">\(\mathbb R^n\)</span>等价，例如：曲面（二维流形）的局部是二维平面。</li><li>对流形进行网格剖分，得到的离散流形除去边缘边之外，其他边有且仅有两个面与之相邻。</li></ol><p>所以我们可以认为，在 <span class="math inline">\(\mathbb R^n\)</span>或更高维欧式空间中观测不同 <span class="math inline">\(n-1\)</span>维流形的嵌套，就是在观测不同的形状。</p><hr><p>更严谨的，对于一个向量函数，可以表达为 <span class="math inline">\(f:\mathbb {R}^n \mapsto \mathbb {R}^m\)</span>.</p><p>我们令 <span class="math inline">\(\vec x = \left( x_1,\, \dots,\,x_n \right)^T \in \mathbb R^n\)</span>， <span class="math inline">\(\vec y = \left(y_1,\, \dots,\, y_m \right)^T \in\mathbb R^m\)</span>，故：</p><p><span class="math display">\[\vec y = f(\vec x) \implies\begin{cases}y_1 = f_1(x_1, \, \dots,\, x_n) \\[2ex]y_i = f_i(x_1, \, \dots,\, x_n) \\[2ex]y_m = f_m(x_1, \, \dots,\, x_n)\end{cases}\]</span></p><p>假设 <span class="math inline">\(f\)</span>是可微的，在自变量任意一点的邻域中，我们有（一阶泰勒展开）：</p><p><span class="math display">\[\begin{cases}\Delta y_1 = \frac{\partial f_1}{\partial x_1} \Delta x_1 + \dots +\frac{\partial f_1}{\partial x_j} \Delta x_j + \dots + \frac{\partialf_1}{\partial x_n} \Delta x_n \\[2ex]\Delta y_i = \frac{\partial f_i}{\partial x_1} \Delta x_1 + \dots +\frac{\partial f_i}{\partial x_j} \Delta x_j + \dots + \frac{\partialf_i}{\partial x_n} \Delta x_n \\[2ex]\Delta y_1 = \frac{\partial f_m}{\partial x_1} \Delta x_1 + \dots +\frac{\partial f_m}{\partial x_j} \Delta x_j + \dots + \frac{\partialf_m}{\partial x_n} \Delta x_n\end{cases}\]</span></p><p>写成矩阵形式</p><p><span class="math display">\[\begin{pmatrix}\Delta y_1 \\[2ex]\dots \\[2ex]\Delta y_i \\[2ex]\dots \\[2ex]\Delta y_m\end{pmatrix}=\begin{pmatrix}\frac{\partial f_1}{\partial x_1} &amp; \dots &amp; \frac{\partialf_1}{\partial x_j} &amp; \dots &amp; \frac{\partial f_1}{\partial x_n}\\[2ex]\dots &amp; \dots &amp; \dots &amp; \dots &amp; \dots \\[2ex]\frac{\partial f_i}{\partial x_1} &amp; \dots &amp; \frac{\partialf_i}{\partial x_j} &amp; \dots &amp; \frac{\partial f_i}{\partial x_n}\\[2ex]\dots &amp; \dots &amp; \dots &amp; \dots &amp; \dots \\[2ex]\frac{\partial f_m}{\partial x_1} &amp; \dots &amp; \frac{\partialf_m}{\partial x_j} &amp; \dots &amp; \frac{\partial f_m}{\partial x_n}\end{pmatrix}\begin{pmatrix}\Delta x_1 \\[2ex]\dots \\[2ex]\Delta x_j \\[2ex]\dots \\[2ex]   \Delta x_n \\[2ex]\end{pmatrix}\]</span></p><p>中间的系数矩阵就是<span class="math inline">\(m \timesn\)</span>的雅克比（Jacobian）矩阵，简化写作： <span class="math display">\[\Delta \vec y = \mathbf J_{m\times n} \,\Delta \vec x\]</span></p><p>观察映射<span class="math inline">\(f\)</span>的雅可比矩阵：</p><ul><li><p>矩阵中第 <span class="math inline">\(i\)</span> 行 表述为第 <span class="math inline">\(i\)</span> 个映射 <span class="math inline">\(f_i: \mathbb R^n \mapsto \mathbb R\)</span>的<strong>梯度（gradient）</strong> <span class="math display">\[\nabla f_i = \left(\frac{\partial f_i}{\partial x_1},\, \dots, \,\frac{\partial f_i}{\partial x_j},\, \dots,\, \frac{\partialf_i}{\partial x_n} \right)\]</span></p></li><li><p>矩阵中第 <span class="math inline">\(j\)</span> 列 表述为映射沿<span class="math inline">\(x_j\)</span> 方向的<strong>切向量（tangentvector）</strong> <span class="math display">\[\frac{d\,(\vec y)}{d\, x_j} = \left(\frac{\partial f_1}{\partial x_j},\,\dots,\, \frac{\partial f_i}{\partial x_j},\, \dots,\, \frac{\partialf_m}{\partial x_j} \right)^T\]</span></p><p>也可以理解为一个<strong>一维流形：</strong> <span class="math inline">\(\mathbb R \mapsto \mathbb R^m\)</span></p></li></ul><p>对不同 <span class="math inline">\(n\)</span> 和 <span class="math inline">\(m\)</span>，<span class="math inline">\(\Delta\vec y = \mathbf J_{m \times n} \, \Delta \vec  x\)</span>可以表述不同含义，总体上：</p><ul><li>若 <span class="math inline">\(m &gt; n\)</span>，因变量维度比自变量维度大，那么以上公式表述了低维流形在高维空间中的嵌套，即形状。</li><li>若 <span class="math inline">\(m &lt; n\)</span>，因变量维度比自变量维度小，那么以上公式表述的是高维流形向低维空间的投影。</li><li>若 <span class="math inline">\(m = n\)</span>，则是表述的线性变换，例如旋转、缩放。</li></ul><div class="note note-info">            <p>值得注意的是，<span class="math inline">\(\vec y = f(\vec x)\)</span>在局部等价于 <span class="math inline">\(\Delta \vec y = \mathbf J_{m\times n} \, \Delta \vec{x}\)</span>，而后者可以表述线性变换，前者通过与后者局部等价，可以表述非线性变换。</p>          </div><p>特别的：</p><table><thead><tr><th style="text-align: center;"><span class="math inline">\(m\)</span></th><th style="text-align: center;"><span class="math inline">\(n\)</span></th><th style="text-align: center;">presents</th></tr></thead><tbody><tr><td style="text-align: center;">1</td><td style="text-align: center;">1</td><td style="text-align: center;">数到数的映射</td></tr><tr><td style="text-align: center;">2</td><td style="text-align: center;">1</td><td style="text-align: center;">平面上的曲线</td></tr><tr><td style="text-align: center;">1</td><td style="text-align: center;">2</td><td style="text-align: center;">二元函数；灰度图；二维流形向一维空间的投影</td></tr><tr><td style="text-align: center;">2</td><td style="text-align: center;">2</td><td style="text-align: center;">线性变换：旋转、缩放、剪切</td></tr></tbody></table><h2 id="二维流形">二维流形</h2><p>对形状有更深的理解之后，我们再来讨论二维流形。</p><p><strong>为什么是二维流形？</strong></p><p>因为人类只能在三维空间中去观察，故能直接观察到的最复杂的形状就是二维流形在三维空间中的嵌套，故着重研究二维流形是有意义的。</p><div class="note note-info">            <p>并不是所有图形都是流形，但是非流形都可以通过局部流形的拼接表述出来，所以我们只关注流形的特性。</p>          </div>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;对于如何确定本篇文章的内容涵盖范围这个问题，我想了很久，最终打算从最基本的&lt;strong&gt;什么是形状（shape）&lt;/strong&gt;
这个问题谈起。&lt;/p&gt;</summary>
    
    
    
    <category term="学习记录" scheme="https://blog.scubot.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Computer Graphics" scheme="https://blog.scubot.com/tags/Computer-Graphics/"/>
    
  </entry>
  
  <entry>
    <title>研究生生活开端</title>
    <link href="https://blog.scubot.com/article/159/"/>
    <id>https://blog.scubot.com/article/159/</id>
    <published>2022-02-15T06:53:46.000Z</published>
    <updated>2024-08-20T00:57:09.094Z</updated>
    
    <content type="html"><![CDATA[<p>至此，我的研究生生活已经过去了半年，生活节奏比起本科时期有了一些变化，感受变化最大的就是娱乐的种类更多了，工作的占比也更多了。</p><p>对于过去的一年，从江安毕业，再搬去望江，整个过程没有什么值得纪念的。对于之后的两年研究生生活，我能感觉到会有很多困难在等着我。</p><p>现在我坐在回学校的高铁上，外面全是雾霾和光秃的枝叉，希望回到学校后能带给我一片宁静。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;至此，我的研究生生活已经过去了半年，生活节奏比起本科时期有了一些变化，感受变化最大的就是娱乐的种类更多了，工作的占比也更多了。&lt;/p&gt;
&lt;p&gt;对于过去的一年，从江安毕业，再搬去望江，整个过程没有什么值得纪念的。对于之后的两年研究生生活，我能感觉到会有很多困难在等着我。&lt;/p</summary>
      
    
    
    
    <category term="代码之外" scheme="https://blog.scubot.com/categories/%E4%BB%A3%E7%A0%81%E4%B9%8B%E5%A4%96/"/>
    
    
  </entry>
  
  <entry>
    <title>贪心的猴子</title>
    <link href="https://blog.scubot.com/article/9102/"/>
    <id>https://blog.scubot.com/article/9102/</id>
    <published>2022-01-21T03:32:38.000Z</published>
    <updated>2024-08-20T00:57:09.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目">题目</h2><blockquote><p>来源 <a href="https://oj.scubot.com/problem/week-1-1"><strong>problem/week-1-1</strong></a></p></blockquote><h3 id="描述">描述</h3><p>在动物园中，一群猴子排队领香蕉，每只猴子都有一个<strong>最少</strong>的香蕉需求量。</p><p>猴子很贪心，每只猴子拿香蕉时可能会拿多于自己最少需求量的香蕉。</p><p>每只猴子就算多拿香蕉，拿的香蕉数目也<strong>不会超过自身需求量的两倍</strong>，同时也<strong>不会超过剩余香蕉数量的一半</strong>。</p><p>最后一只猴子是例外，他可以把所有剩余的香蕉都拿走。</p><h2 id="section"><span id="more"></span></h2><p>如果你是动物园饲养员，负责为猴子准备香蕉，在已知<strong>猴子总数</strong>和<strong>每只猴子的最少香蕉需求量</strong>时，</p><p>至少准备多少香蕉，才能保证每只猴子拿到的香蕉都能满足自己的需求。</p><h3 id="输入">输入</h3><p>第一行：整数<span class="math inline">\(n\)</span>，表示猴子的总数，<span class="math inline">\(0\le n\le100\)</span></p><p>第二行：<span class="math inline">\(n\)</span>个整数，第<span class="math inline">\(i\)</span>​​个整数为<span class="math inline">\(e_i\)</span>，表示第<span class="math inline">\(i\)</span>只猴子的最少香蕉需求量，<span class="math inline">\(1\le e_i \le 1000\)</span></p><h3 id="输出">输出</h3><p>输出一整数，表示<strong>最少</strong>需要准备的香蕉的数量。</p><h3 id="样例">样例</h3><h4 id="输入样例1">输入样例1</h4><figure class="highlight basic"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">3</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">4</span> <span class="hljs-number">3</span><br></code></pre></td></tr></tbody></table></figure><h4 id="输出样例1">输出样例1</h4><figure class="highlight"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">10<br></code></pre></td></tr></tbody></table></figure><blockquote><p>其他样例见 <a href="https://oj.scubot.com/problem/week-1-1"><strong>problem/week-1-1</strong></a></p></blockquote><h2 id="解析">解析</h2><div class="note note-info">            <p>解决问题的方法不唯一，我这里展示的一定不是最优解法。</p>          </div><h3 id="符号说明">符号说明</h3><table><thead><tr><th>符号</th><th>备注</th></tr></thead><tbody><tr><td><span class="math inline">\(i\)</span></td><td>猴子序号，从<span class="math inline">\(0\)</span>到<span class="math inline">\(n-1\)</span></td></tr><tr><td><span class="math inline">\(e_i\)</span>​</td><td>第<span class="math inline">\(i\)</span>只猴子香蕉的最小需求量</td></tr><tr><td><span class="math inline">\(E_i\)</span></td><td>第<span class="math inline">\(i\)</span>只猴子实际拿的香蕉数量</td></tr><tr><td><span class="math inline">\(R_i\)</span></td><td>该第<span class="math inline">\(i\)</span>只猴子拿香蕉时，所剩余的香蕉数量</td></tr></tbody></table><h3 id="关系表述">关系表述</h3><p>用以上定义的符号去表述问题中描述的关系</p><h4 id="关系1">关系1</h4><p>猴子拿香蕉时，香蕉剩余量必须大于等于猴子最小需求量</p><p><span class="math display">\[R_i \ge e_i\]</span></p><h4 id="关系2">关系2</h4><p>对于<span class="math inline">\(i \in [0, n-1)\)</span>​​，每只猴子实际拿的香蕉数量满足</p><p><span class="math display">\[e_i \le E_i \le \min \{2 e_i, \lfloor R_i / 2 \rfloor\}\]</span></p><h4 id="关系3">关系3</h4><p>对于<span class="math inline">\(i = n-1\)</span>，即最后一只猴子</p><p><span class="math display">\[E_i = R_i\]</span></p><h4 id="关系4">关系4</h4><p>对于<span class="math inline">\(i \in [0, n - 1)\)</span>​ 满足 <span class="math display">\[R_i =  \sum_{k = i}^{n - 1} E_k\]</span></p><h3 id="关系解析">关系解析</h3><h4 id="解析1">解析1</h4><p>对于<span class="math inline">\(i \in [0, n -1)\)</span>​，每只猴子足够贪婪，永远会选择当前最优选择</p><p>由<a href="#关系1"><strong>关系1</strong></a>和<a href="#关系2"><strong>关系2</strong></a>可知 <span class="math display">\[E_i = \min\{2e_i, \lfloor R_i / 2 \rfloor \} \ge e_i\]</span> 引入<a href="#关系4"><strong>关系4</strong></a>，将<span class="math inline">\(R_i\)</span>替换为<span class="math inline">\(E_i\)</span>的表达式 <span class="math display">\[E_i = \min\{2e_i, \lfloor \sum_{k = i}^{n - 1} E_k / 2 \rfloor \} \gee_i\]</span></p><h4 id="解析2">解析2</h4><p>由<a href="#关系1"><strong>关系1</strong></a>和<a href="#关系3"><strong>关系3</strong></a>可知 <span class="math display">\[E_{n - 1} = R_{n - 1} \ge e_{n - 1}\]</span></p><h3 id="目标分析">目标分析</h3><p>综合<a href="#解析1"><strong>解析1</strong></a>与<a href="#解析2"><strong>解析2</strong></a>可得</p><ul><li>当<span class="math inline">\(i = n - 1\)</span>时，<span class="math inline">\(E_i \ge e_i\)</span></li><li>当<span class="math inline">\(i \in [0, n - 1)\)</span>时，<span class="math inline">\(E_i = \min\{2e_i, \lfloor \sum_{k = i}^{n - 1} E_k/ 2 \rfloor \}\)</span></li></ul><p>观察可知，<span class="math inline">\(E_i\)</span>​由<span class="math inline">\(E_{n - 1}\)</span>​和<span class="math inline">\(e_i\)</span>​决定，而<span class="math inline">\(e_i\)</span>​已知，故将<span class="math inline">\(E_{n-1}\)</span>​看做未知量进行推导。</p><hr><p>对于<span class="math inline">\(i\in[0, n-1)\)</span>​​，当<span class="math inline">\(\lfloor \sum_{k = i}^{n - 1} E_k / 2 \rfloor \le2e_i\)</span>​​​​时</p><ul><li>【<strong>偶数假设</strong>】如果<span class="math inline">\(\sum_{k= i}^{n - 1}E_k\)</span>​为偶数，有<span class="math inline">\(2E_i = E_i+ \sum_{k = i +1}^{n - 1}E_k\)</span>​ 即 <span class="math inline">\(E_i= \sum_{k = i + 1}^{n - 1} E_k\)</span>​</li><li>【<strong>奇数假设</strong>】如果<span class="math inline">\(\sum_{k= i}^{n - 1}E_k\)</span>​​​为奇数，有<span class="math inline">\(2E_i = E_i+ \sum_{k = i +1}^{n - 1}E_k - 1\)</span>​​​ 即 <span class="math inline">\(E_i = \sum_{k = i + 1}^{n - 1} E_k -1\)</span>​</li></ul><p>即<span class="math inline">\(E_i\)</span>可以由<span class="math inline">\(E_k\)</span>表出，<span class="math inline">\(k\in [i + 1, n - 1]\)</span></p><p>观察奇数偶数假设</p><ul><li>当<span class="math inline">\(E_i = \sum_{k = i + 1}^{n - 1}E_k\)</span>时，<span class="math inline">\(\sum_{k = i}^{n - 1}E_k =E_i + \sum_{k = i + 1}^{n-1}E_k = 2 \sum_{k = i +1}^{n-1}E_k\)</span>，故偶数假设成立</li><li>当<span class="math inline">\(E_i = \sum_{k = i + 1}^{n - 1} E_k -1\)</span>​​时，<span class="math inline">\(\sum_{k = i}^{n - 1}E_k = E_i+ \sum_{k = i + 1}^{n-1}E_k -1= 2 \sum_{k = i + 1}^{n-1}E_k-1\)</span>​​，故奇数假设成立</li></ul><h4 id="局部最优">局部最优</h4><p>对于<span class="math inline">\(i \in [0, n -1)\)</span>，将<span class="math inline">\(E_{n-1}\)</span>和<span class="math inline">\(i\)</span>看做自变量，<span class="math inline">\(E_i\)</span>看做因变量</p><p>可得函数关系： <span class="math display">\[E_i = f(E_{n-1}, i) = \min\{2e_i, \sum_{k = i + 1}^{n-1}E_k - 1, \sum_{k= i + 1}^{n-1}E_k\} \ge e_i\]</span> 如果控制<span class="math inline">\(E_{n-1}\)</span>​​的量，使得每只猴子实际能拿的最多的香蕉的数量最少，则认为整体香蕉的消耗量最少，即<strong>局部最优等于全局最优</strong>。</p><p>即对于给定<span class="math inline">\(i\)</span>​，求解<span class="math inline">\(E_{n-1}\)</span> <span class="math display">\[{\operatorname {arg\,min} }\,f(E_{n-1}, i):=\{E_{n-1}\mid E_{n-1} \gee_{n-1}:f(E_{n-1})\geq e_i\}\]</span></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;题目&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;来源 &lt;a href=&quot;https://oj.scubot.com/problem/week-1-1&quot;&gt;&lt;strong&gt;problem/week-1-1&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;描述&quot;&gt;描述&lt;/h3&gt;
&lt;p&gt;在动物园中，一群猴子排队领香蕉，每只猴子都有一个&lt;strong&gt;最少&lt;/strong&gt;的香蕉需求量。&lt;/p&gt;
&lt;p&gt;猴子很贪心，每只猴子拿香蕉时可能会拿多于自己最少需求量的香蕉。&lt;/p&gt;
&lt;p&gt;每只猴子就算多拿香蕉，拿的香蕉数目也&lt;strong&gt;不会超过自身需求量的两倍&lt;/strong&gt;，同时也&lt;strong&gt;不会超过剩余香蕉数量的一半&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;最后一只猴子是例外，他可以把所有剩余的香蕉都拿走。&lt;/p&gt;
&lt;h2 id=&quot;section&quot;&gt;&lt;/h2&gt;</summary>
    
    
    
    
    <category term="算法" scheme="https://blog.scubot.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>对SCU网络服务安全性的第一次探索</title>
    <link href="https://blog.scubot.com/article/a44f/"/>
    <id>https://blog.scubot.com/article/a44f/</id>
    <published>2021-10-12T13:39:09.000Z</published>
    <updated>2024-08-20T00:57:09.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对川大疫情防控每日报系统的探索">对【川大疫情防控每日报系统】的探索</h1><h2 id="前言">前言</h2><p>本文中的数据皆由合理/合法途径获取，旨在课业之余找点乐趣，别无其他。</p><h2 id="api">API</h2><h3 id="百度地图api">百度地图API</h3><blockquote><p>这里指百度地图的逆地理编码服务，下文中的<code>ak</code>为scu提供的</p></blockquote><h4 id="url">URL</h4><p>[<strong>GET</strong>]https://api.map.baidu.com/reverse_geocoding/v3/</p><h4 id="query-params">Query Params</h4><table><thead><tr><th>键</th><th>值</th><th>释义</th></tr></thead><tbody><tr><td>output</td><td>json</td><td>响应数据格式</td></tr><tr><td>coordtype</td><td>wgs84ll</td><td>坐标系统</td></tr><tr><td>ak</td><td>0hYGiH3Ob5ZhV0eWzrGVXCD3bEdBCi6L</td><td>access_key，使用scu自带的</td></tr><tr><td>location</td><td>&lt;经度&gt;,&lt;纬度&gt;</td><td>经纬度（float）</td></tr></tbody></table><h4 id="response-example">Response / Example</h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">{</span><br>    <span class="hljs-attr">"status"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"result"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"location"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>            <span class="hljs-attr">"lng"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.0790496319792</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"lat"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.641844458412959</span><br>        <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"formatted_address"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省成都市武侯区一环路南2段-11号-附25号"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"business"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"跳伞塔,磨子桥,科华北路"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"addressComponent"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>            <span class="hljs-attr">"country"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"中国"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"country_code"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"country_code_iso"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"CHN"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"country_code_iso2"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"CN"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"province"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"city"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"成都市"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"city_level"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"district"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"武侯区"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"town"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"town_code"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"adcode"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"510107"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"street"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"一环路"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"street_number"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"南2段-11号-附25号"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"direction"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"附近"</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-attr">"distance"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"21"</span><br>        <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"pois"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"roads"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"poiRegions"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"sematic_description"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"cityCode"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">75</span><br>    <span class="hljs-punctuation">}</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><h3 id="疫情填报数据提交">疫情填报数据提交</h3><h4 id="url-1">URL</h4><p>[<strong>POST</strong>]https://wfw.scu.edu.cn/ncov/wap/default/save</p><h4 id="data-form">Data Form</h4><blockquote><p>以下表单内容仅由我个人信息得到，不一定囊括全部内容，且仅在2021-10-12与未来的一段时间内有效</p></blockquote><table><thead><tr><th>键</th><th>类型</th><th>默认值</th><th>释义</th></tr></thead><tbody><tr><td>zgfxdq</td><td>int</td><td>"0"</td><td>是否在中高风险地区</td></tr><tr><td>mjry</td><td>int</td><td>"0"</td><td>是否接触密接人员</td></tr><tr><td>csmjry</td><td>Int</td><td>"0"</td><td>近14日内本人/共同居住者是否去过疫情发生场所</td></tr><tr><td>szxqmc</td><td>string</td><td>""</td><td>所在校区名称，从"江安校区"、"望江校区"与"华西校区"中选择</td></tr><tr><td>sfjzxgym</td><td>int</td><td>"0"</td><td>是否接种新冠疫苗，"0"或"1"</td></tr><tr><td>jzxgymrq</td><td>string</td><td>""</td><td>接种第一剂新冠疫苗日期，日期格式：%Y-%m-%d</td></tr><tr><td>sfjzdezxgym</td><td>int</td><td>"0"</td><td>是否接种第二剂新冠疫苗，"0"或"1"</td></tr><tr><td>jzdezxgymrq</td><td>string</td><td>""</td><td>接种第二剂新冠疫苗日期，日期格式：%Y-%m-%d</td></tr><tr><td>tw</td><td>int</td><td>"1"</td><td>体温范围（实际表单上的选项编号），"2"和"3"为正常</td></tr><tr><td>sfcxtz</td><td>int</td><td>"0"</td><td>是否出现发热等症状，"0"或"1"</td></tr><tr><td>sfyyjc</td><td>int</td><td>"0"</td><td>是否前往医院做过检查，如果sfcxtz为"1"需填写</td></tr><tr><td>jcjgqr</td><td>int</td><td>"0"</td><td>检查结果，如果sfyyjc为"1"需填写。"1" =&gt; 疑似感染; "2" =&gt;确认感染; "3" =&gt; 其他</td></tr><tr><td>jcjg</td><td>string</td><td>""</td><td>检查结果详细描述</td></tr><tr><td>sfjcbh</td><td>int</td><td>"0"</td><td>是否接触无症状感染或疑似感染人群，"0"或"1"</td></tr><tr><td>jcbhlx</td><td>int</td><td>"0"</td><td>接触人群类型，如果sfjcbh为"1"需填写，"1" =&gt; 疑似; "2" =&gt;确诊</td></tr><tr><td>jcbhrq</td><td>string</td><td>""</td><td>接触时间，如果sfjcbh为"1"需填写，日期格式：%Y-%m-%d</td></tr><tr><td>sfcxzysx</td><td>int</td><td>"0"</td><td>是否有疫情相关的情况，"0"或"1"</td></tr><tr><td>qksm</td><td>string</td><td>""</td><td>情况说明，如果sfcxzysx为"1"需填写</td></tr><tr><td>remark</td><td>string</td><td>""</td><td>其他信息</td></tr><tr><td>sfzx</td><td>int</td><td>"1"</td><td>是否在校</td></tr><tr><td>fxyy</td><td>string</td><td>""</td><td>返校原因，sfxz为"1"时填写</td></tr><tr><td>bzxyy</td><td>string</td><td>""</td><td>不在校原因，sfzx为"0"时填写</td></tr><tr><td>sfjcwhry</td><td>int</td><td>"0"</td><td>是否接触武汉人员</td></tr><tr><td>sfjchbry</td><td>int</td><td>"0"</td><td>是否接触河北人员</td></tr><tr><td>sfcyglq</td><td>int</td><td>"0"</td><td>是否处于观察期</td></tr><tr><td>gllx</td><td>int</td><td>"0"</td><td>观察场所（实际表单上的选项编号），如果sfcyglq为"1"需填写</td></tr><tr><td>glksrq</td><td>string</td><td>"0"</td><td>观察开始时间，日期格式：%Y-%m-%d</td></tr><tr><td>ismoved</td><td>int</td><td>"0"</td><td>所在区域是否变化</td></tr><tr><td>bztcyy</td><td>int</td><td>"0"</td><td>不在同一城市的原因（实际表单上的选项编号），ismoved为"1"时需填写</td></tr><tr><td>sftjhb</td><td>int</td><td>"0"</td><td>是否途径河北</td></tr><tr><td>sftjwh</td><td>int</td><td>"0"</td><td>是否途径武汉</td></tr><tr><td>szcs</td><td>string</td><td>""</td><td>所在城市，例："成都市"</td></tr><tr><td>szgj</td><td>string</td><td>""</td><td>所在国家，例："中国"</td></tr><tr><td>city</td><td>string</td><td>""</td><td>所在城市，例："成都市"</td></tr><tr><td>province</td><td>string</td><td>""</td><td>所在省，例："四川省"</td></tr><tr><td>area</td><td>string</td><td>""</td><td>所在地区，例："四川省 成都市 武侯区"</td></tr><tr><td>address</td><td>string</td><td>""</td><td>具体所在地点，例："四川省成都市武侯区望江路街道四川大学四川大学望江校区研究生院"</td></tr><tr><td>date</td><td>string</td><td>""</td><td>今日日期，日期格式：%Y%m%d</td></tr><tr><td>created</td><td>int</td><td>0</td><td>表单创建的时间戳</td></tr><tr><td>uid</td><td>int</td><td>0</td><td>用户唯一标识</td></tr><tr><td>id</td><td>int</td><td>0</td><td>当前表单的标识</td></tr><tr><td>geo_api_info</td><td>json/string</td><td>""</td><td>地理位置的详细信息，通过百度地图API获取</td></tr></tbody></table><h4 id="response-example-1">Response / Example</h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">{</span><br>    <span class="hljs-attr">"zgfxdq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"mjry"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"csmjry"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"szxqmc"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"望江校区"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfjzxgym"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"1"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jzxgymrq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2021-xx-xx"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfjzdezxgym"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"1"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jzdezxgymrq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2021-xx-xx"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"tw"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfcxtz"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfjcbh"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfcxzysx"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"qksm"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfyyjc"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jcjgqr"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"remark"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"address"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省成都市武侯区望江路街道四川大学四川大学望江校区研究生院"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"geo_api_info"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"{...}"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"area"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省 成都市 武侯区"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"province"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"city"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"成都市"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfzx"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"1"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfjcwhry"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfjchbry"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfcyglq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"gllx"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"glksrq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jcbhlx"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jcbhrq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"bztcyy"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"1"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sftjhb"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sftjwh"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"szcs"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"szgj"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"bzxyy"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jcjg"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"hsjcrq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"hsjcdd"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"hsjcjg"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"0"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"date"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"20211011"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"uid"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"2134xxx"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"created"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1633881623</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jcqzrq"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfjcqz"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"szsqsfybl"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfsqhzjkk"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sqhzjkkys"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfygtjzzfj"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">0</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"gtjzzfjsj"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"fxyy"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"开学返校"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"id"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4365</span>xxxx<span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"gwszdd"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"sfyqjzgc"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jrsfqzys"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"jrsfqzfy"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><h2 id="uid与id的获取"><code>uid</code>与<code>id</code>的获取</h2><p>从以上表单数据可以看出，<code>uid</code>为用户的唯一标识，我已测试过多次，对于同一用户的不同次提交，该字段未有变化。</p><p>而<code>id</code>根据我的猜测，可能是指表单创建的序号，从1开始自增的编号。</p><p>该猜测还在测试中。</p><h2 id="一份可用的geo_api_info">一份可用的<code>geo_api_info</code></h2><p>对于川大望江校区的学生，这里有一份整理好可用的<code>geo_api_info</code></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">{</span><br>    <span class="hljs-attr">"type"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"complete"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"position"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"Q"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.630839301216</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"R"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.079966362848</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"lng"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.07997</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"lat"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.630839</span><br>    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"location_type"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"ip"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"message"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"Get ipLocation success.Get address success."</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"accuracy"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">null</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"isConverted"</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"status"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">1</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"addressComponent"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>        <span class="hljs-attr">"citycode"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"028"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"adcode"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"510107"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"businessAreas"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>            <span class="hljs-punctuation">{</span><br>                <span class="hljs-attr">"name"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"跳伞塔"</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">"id"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"510107"</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">"location"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>                    <span class="hljs-attr">"Q"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.636149</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">"R"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.071224</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">"lng"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.071224</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">"lat"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.636149</span><br>                <span class="hljs-punctuation">}</span><br>            <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>            <span class="hljs-punctuation">{</span><br>                <span class="hljs-attr">"name"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"小天竺"</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">"id"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"510107"</span><span class="hljs-punctuation">,</span><br>                <span class="hljs-attr">"location"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">{</span><br>                    <span class="hljs-attr">"Q"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.639354</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">"R"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.068942</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">"lng"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">104.068942</span><span class="hljs-punctuation">,</span><br>                    <span class="hljs-attr">"lat"</span><span class="hljs-punctuation">:</span> <span class="hljs-number">30.639354</span><br>                <span class="hljs-punctuation">}</span><br>            <span class="hljs-punctuation">}</span><br>        <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"neighborhoodType"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"科教文化服务;学校;高等院校"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"neighborhood"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川大学"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"building"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"buildingType"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">""</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"street"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"科华北路"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"streetNumber"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"194号"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"country"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"中国"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"province"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"city"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"成都市"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"district"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"武侯区"</span><span class="hljs-punctuation">,</span><br>        <span class="hljs-attr">"township"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"望江路街道"</span><br>    <span class="hljs-punctuation">}</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"formattedAddress"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"四川省成都市武侯区望江路街道四川大学四川大学望江校区研究生院"</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"roads"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"crosses"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"pois"</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">"info"</span><span class="hljs-punctuation">:</span> <span class="hljs-string">"SUCCESS"</span><br><span class="hljs-punctuation">}</span><br></code></pre></td></tr></tbody></table></figure><p>需要注意的是：</p><ul><li><code>province</code> =<code>geo_api_info.addressComponent.province</code></li><li><code>city</code>=<code>geo_api_info.addressComponent.city</code></li><li><code>address</code>=<code>geo_api_info.province</code>+ ' ' +<code>geo_api_info.city</code>+ ' ' +<code>geo_api_info.addressComponent.district</code></li></ul><h2 id="一个猜想">一个猜想</h2><p>对于现有的表单设计，只用了<code>uid</code>一项字段来唯一标识一名用户，而且根据我的<code>uid</code>内容，可以认为所有<code>uid</code>的内容都为较小的整形数。也就是说，也许可以暴力的遍历所有小整数，从而获取有效的<code>uid</code>。</p><h2 id="自动打卡脚本示例">自动打卡脚本示例</h2><p><code>cookies_str</code>从https://wfw.scu.edu.cn/ncov/wap/default/index获取</p><blockquote><p>以下内容仅作参考</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> datetime<br><span class="hljs-keyword">import</span> requests<br><br><br><span class="hljs-comment"># handle cookies and init session</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">init_session</span>(<span class="hljs-params">cookies_str: <span class="hljs-built_in">str</span></span>) -&gt; requests.Session():<br>    cookies_dict = {}<br>    <span class="hljs-keyword">for</span> line <span class="hljs-keyword">in</span> cookies_str.split(<span class="hljs-string">';'</span>):<br>        key, value = line.split(<span class="hljs-string">'='</span>, <span class="hljs-number">1</span>)<br>        cookies_dict[key] = value<br><br>    session = requests.session()<br>    cookiesJar = requests.utils.cookiejar_from_dict(<br>        cookies_dict,<br>        cookiejar=<span class="hljs-literal">None</span>, <br>        overwrite=<span class="hljs-literal">True</span><br>    )<br>    session.cookies = cookiesJar<br>    <span class="hljs-keyword">return</span> session<br><br><br><span class="hljs-comment"># get default json with uid and id</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">get_default_json</span>(<span class="hljs-params">session: requests.Session</span>) -&gt; <span class="hljs-built_in">tuple</span>:<br>    url = <span class="hljs-string">'https://wfw.scu.edu.cn/ncov/wap/default/index'</span><br><br>    resp = session.get(url=url)<br><br>    <span class="hljs-keyword">if</span> resp.status_code != <span class="hljs-number">200</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">'[ERROR]'</span>, resp.status_code)<br>        exit()<br><br>    html = resp.content.decode(<span class="hljs-string">'utf-8'</span>)<br><br>    pattern = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">'var def =(.*);!?'</span>)<br><br>    res = re.findall(pattern, html)<br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(res) == <span class="hljs-number">0</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">'[ERROR] not found'</span>)<br>        exit()<br><br>    res_json = json.loads(res[<span class="hljs-number">0</span>])<br>    <span class="hljs-keyword">return</span> session, res_json<br><br><br><span class="hljs-comment"># load default geo_api_info</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">modify_json</span>(<span class="hljs-params">res_json: <span class="hljs-built_in">dict</span></span>) -&gt; <span class="hljs-built_in">dict</span>:<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">'geo_api_info.json'</span>, <span class="hljs-string">'r'</span>) <span class="hljs-keyword">as</span> ifile:<br>        res_json[<span class="hljs-string">'geo_api_info'</span>] = json.load(ifile)<br><br>    res_json[<span class="hljs-string">'province'</span>] = res_json[<span class="hljs-string">'geo_api_info'</span>][<span class="hljs-string">'addressComponent'</span>][<span class="hljs-string">'province'</span>]<br>    res_json[<span class="hljs-string">'city'</span>] = res_json[<span class="hljs-string">'geo_api_info'</span>][<span class="hljs-string">'addressComponent'</span>][<span class="hljs-string">'city'</span>]<br>    res_json[<span class="hljs-string">'address'</span>] = res_json[<span class="hljs-string">'geo_api_info'</span>][<span class="hljs-string">'formattedAddress'</span>]<br>    res_json[<span class="hljs-string">'area'</span>] = <span class="hljs-string">' '</span>.join([<br>        res_json[<span class="hljs-string">'province'</span>],<br>        res_json[<span class="hljs-string">'city'</span>],<br>        res_json[<span class="hljs-string">'geo_api_info'</span>][<span class="hljs-string">'addressComponent'</span>][<span class="hljs-string">'district'</span>]<br>    ])<br>    res_json[<span class="hljs-string">'date'</span>] = datetime.datetime.now().strftime(<span class="hljs-string">"%Y%m%d"</span>)<br>    res_json[<span class="hljs-string">'created'</span>] = <span class="hljs-built_in">int</span>(time.time())<br>    res_json[<span class="hljs-string">'ismoved'</span>] = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> res_json<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">post_json</span>(<span class="hljs-params">session: requests.Session, res_json: <span class="hljs-built_in">dict</span></span>):<br>    url = <span class="hljs-string">'https://wfw.scu.edu.cn/ncov/wap/default/save'</span><br>    resp = session.post(url=url, data=res_json)<br>    <span class="hljs-built_in">print</span>(resp.status_code, resp.content.decode(<span class="hljs-string">'utf-8'</span>))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    cookies_str = <span class="hljs-string">'eai-sess=xxx; UUkey=xxx'</span><br>    session = init_session(cookies_str)<br>    session, res_json = get_default_json(session)<br>    res_json = modify_json(res_json)<br>    post_json(session, res_json)<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;对川大疫情防控每日报系统的探索&quot;&gt;对【川大疫情防控每日报系统】的探索&lt;/h1&gt;
&lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;
&lt;p&gt;本文中的数据皆由合理/合法途径获取，旨在课业之余找点乐趣，别无其他。&lt;/p&gt;
&lt;h2 id=&quot;api&quot;&gt;API&lt;/h2&gt;
&lt;h3 id=&quot;</summary>
      
    
    
    
    <category term="SCU相关" scheme="https://blog.scubot.com/categories/SCU%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>快速反平方根算法</title>
    <link href="https://blog.scubot.com/article/39b0/"/>
    <id>https://blog.scubot.com/article/39b0/</id>
    <published>2021-10-10T04:15:56.000Z</published>
    <updated>2024-08-20T00:57:09.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="什么是反平方根">什么是反平方根</h2><p>反平方根即平方根的倒数：</p><p><span class="math display">\[y = \frac{1} {\sqrt x}\]</span></p><p>该计算表达式在图形学中的向量正规化中经常用到，对于大规模场景的法线向量计算，如果仅使用</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">float</span> <span class="hljs-title function_">rsqrt</span><span class="hljs-params">(<span class="hljs-type">float</span> number)</span><br>{<br><span class="hljs-type">float</span> y = <span class="hljs-number">1</span> / <span class="hljs-built_in">sqrt</span>(number);<br>  <span class="hljs-keyword">return</span> y;<br>}<br></code></pre></td></tr></tbody></table></figure><p>就显得非常笨拙。</p><p>因为在计算机中，一般加法与乘法都是经过硬件优化的，计算速度会很快，求平方根则不同。</p><p>为了更快的计算一个浮点数的平方根的倒数，一个更快更奇怪的算法在《<a href="https://zh.wikipedia.org/wiki/%E9%9B%B7%E7%A5%9E%E4%B9%8B%E9%94%A4III%E7%AB%9E%E6%8A%80%E5%9C%BA">雷神之锤3</a>》中被提出（可能更早），该算法也成为了<strong>MagicNumber</strong>的典型案例。</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">float</span> <span class="hljs-title function_">Q_rsqrt</span><span class="hljs-params">( <span class="hljs-type">float</span> number )</span><br>{<br><span class="hljs-type">long</span> i;<br><span class="hljs-type">float</span> x2, y;<br><span class="hljs-type">const</span> <span class="hljs-type">float</span> threehalfs = <span class="hljs-number">1.5F</span>;<br><br>x2 = number * <span class="hljs-number">0.5F</span>;<br>y  = number;<br>i  = * ( <span class="hljs-type">long</span> * ) &amp;y;                       <span class="hljs-comment">// evil floating point bit level hacking</span><br>i  = <span class="hljs-number">0x5f3759df</span> - ( i &gt;&gt; <span class="hljs-number">1</span> );               <span class="hljs-comment">// what the fuck?</span><br>y  = * ( <span class="hljs-type">float</span> * ) &amp;i;<br>y  = y * ( threehalfs - ( x2 * y * y ) );   <span class="hljs-comment">// 1st iteration</span><br><span class="hljs-comment">//y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed</span><br><br><span class="hljs-keyword">return</span> y;<br>}<br></code></pre></td></tr></tbody></table></figure><p>要理解该算法是如何工作的，我们需要掌握一些内容：</p><ol type="1"><li>浮点数在计算机内存中的存储方式</li><li>c语言中的类型转换与重解释</li><li>牛顿迭代法（求函数的近似零点）</li></ol><h2 id="ieee-754">IEEE 754</h2><p>在<a href="https://zh.wikipedia.org/wiki/IEEE_754">IEEE754</a>标准中，定义了浮点数在计算机中的存储方式：</p><p>以32位浮点数为例（在c语言中为<code>float</code>）</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Float_example.svg/2880px-Float_example.svg.png"></p><p>其中32位bit被分割成了3部分（科学计数法）：</p><ol type="1"><li><strong>Sign</strong> 符号位，0为正数，1为负数。</li><li><strong>Exponent</strong> 指数位，简写为<span class="math inline">\(E\)</span>，一共包含8位bit。</li><li><strong>Fraction</strong> 或 <strong>Mantissa</strong>尾数位，简写为<span class="math inline">\(M\)</span>，一共包含23bit。</li></ol><p>对于求反平方根的算法，符号位可以不进行讨论，因为输入的浮点数只有为正该算法才在实数域中有意义。</p><p>对于指数位<span class="math inline">\(E\)</span>（移码），可以表示-126到127（-127和128被用作特殊值处理），实际表示的2的指数应该是<span class="math inline">\(E-127\)</span>。</p><p>对于尾数位<span class="math inline">\(M\)</span>，表示的是科学计数法中，尾数的<strong>小数点后</strong>的数字，因为<strong>在二进制的科学计数法表示里，尾数的小数点前的数字必为1</strong>。</p><p>那么，根据IEEE 754的定义，一个浮点数（32位）F就可以表示为： <span class="math display">\[F = (-1)^S \cdot 2^{E - 127} \cdot (1 + 2^{-23}M)\]</span> 在本算法中，符号位可以认为恒0，即可化简为： <span class="math display">\[F = 2^{E-127}\cdot (1+2^{-23}M)\]</span>同时，如果我们将该32位看作是<code>int</code>或<code>long</code>（在c语言中二者可以看做同一类型），那其对应的整形数<span class="math inline">\(L\)</span>为： <span class="math display">\[L = 2^{23}E + M\]</span> 对于同样的32位bit，我们可以将其解释为浮点数<span class="math inline">\(F\)</span>，也可以解释为整数<span class="math inline">\(L\)</span>。那么<span class="math inline">\(F\)</span>和<span class="math inline">\(L\)</span>之间有没有数量上的关系？</p><h2 id="l与f的关系"><span class="math inline">\(L\)</span>与<span class="math inline">\(F\)</span>的关系</h2><p>对于<span class="math inline">\(F\)</span>的表达式，我们可以进行这样的运算： <span class="math display">\[\begin{align}F=&amp; 2^{E-127}\cdot(1+2^{-23}M) \\[1ex]\log_2(F)=&amp;\log_2(2^{E-127} \cdot (1+2^{-23}M)) \\[1ex]\log_2(F)=&amp;\log_2(2^{E-127}) + \log_2(1+2^{-23}M)\\[1ex]\log_2(F)=&amp;E-127 + \log_2(1+2^{-23}M)\end{align}\]</span> 观察函数<span class="math inline">\(f(x)=x\)</span>与<span class="math inline">\(g(x)=\log_2(x+1)\)</span></p><p><img src="https://imgbed.scubot.com/image/image-20211010131819724.png" alt="函数图像" style="zoom:50%;"></p><p>当<span class="math inline">\(0\le x \le 1\)</span>时，<span class="math inline">\(f(x)\approx g(x)\)</span>即可表示为<span class="math inline">\(f(x) = g(x) + \mu\)</span>，其中<span class="math inline">\(\mu\)</span>为误差。</p><p>故<span class="math inline">\(\log_2(1+2^{-23}M)\approx2^{-23}M +\mu\)</span>，即： <span class="math display">\[\begin{align}\log_2(F) =&amp; E - 127 + \log_2(1 + 2^{-23}M) \\[1ex]\log_2(F) =&amp; E - 127 + 2^{-23}M + \mu \\[1ex]\log_2(F) =&amp; 2^{-23}(2^{23}E + M) + \mu - 127\end{align}\]</span> 又因为<span class="math inline">\(L=2^{23}E + M\)</span>，得<span class="math display">\[\log_2(F) = 2^{-23}L + \mu - 127\]</span> 至此，我们得到了对于同一32位二进制串的浮点数解释<span class="math inline">\(F\)</span>与整数解释<span class="math inline">\(L\)</span>之间的<strong>近似</strong>数量关系。</p><h2 id="c语言中的类型转换与重解释">c语言中的类型转换与重解释</h2><blockquote><p>Type punning (类型双关):c++中可以使用<code>reinterpret_cast</code>实现双关</p></blockquote><p>在c语言中，如果我们需要将32位浮点数<code>float</code>转为<code>long</code>（或<code>int</code>），我们可以显示得：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">float</span> num_float = <span class="hljs-number">3.3</span>;<br><span class="hljs-type">long</span> num_long = (<span class="hljs-type">long</span>)num_float;<br></code></pre></td></tr></tbody></table></figure><p>得到的结果<code>num_long</code>为3。</p><p>但是如果我们更底层的，对于IEEE754中提到的，我想把32位浮点数，转换成<strong>32bit都相同的整形</strong>，该如何做呢？</p><p>在程序运行中，变量的数据一般是存储在内存中，在c语言里可以通过<code>&amp;</code>来获取变量的地址。而<code>(long *) 地址</code>即可使用<code>long</code>的指针指向该地址，再使用<code>*</code>获取该指针的内容，即可实现了在c语言里使用指针重解释内存中的数据类型。</p><p>即<code>Q_rsqrt</code>函数中的<code>i  = * ( long * ) &amp;y;</code>，<code>y</code>本为<code>float</code>类型，使用该方法可以将其<strong>bit不变得</strong>解释为<code>long</code>类型的<code>i</code>变量。</p><h2 id="求解反平方根的近似">求解反平方根的近似</h2><p>在求解之前，我们先回顾上面的结论： <span class="math display">\[\begin{align}\log_2(F) = 2^{-23}L + \mu - 127\end{align}\]</span> 其中<span class="math inline">\(F\)</span>为32位bit的浮点数解释，<span class="math inline">\(L\)</span>为32位bit的整形解释。而在c语言中使用指针可以实现<span class="math inline">\(F\)</span>与<span class="math inline">\(L\)</span>的转换，更重要的是，转换是极快的。</p><p>至此，我们可以明确快速平方根的算法的目的：</p><ol type="1"><li>求解有效32位浮点数的平方根的倒数</li><li>尽可能的只使用<strong>加法</strong>、<strong>乘法</strong>与<strong>位运算</strong></li><li>时间复杂度为常数</li><li>可以有一些误差（计算机存储浮点数本身就有误差）</li></ol><blockquote><p>值得注意的是，浮点数本身不支持位运算</p></blockquote><hr><p>回到一开始的问题，求解：<span class="math inline">\(y=1/\sqrtx\)</span></p><p>问题可以表示为： <span class="math display">\[F_y = 1 / \sqrt{F_x}\]</span></p><p><span class="math display">\[\begin{align}F_y =&amp; 1 / \sqrt{F_x} \\[1ex]\log_2(F_y) =&amp; \log_2(1/\sqrt{F_x}) \\[1ex]\log_2(F_y) =&amp; \log_2(F_x^{-1/2}) \\[1ex]\log_2(F_y) =&amp; -\frac{1}{2}\log_2(F_x)\end{align}\]</span></p><p>将<span class="math inline">\(\log_2(F) = 2^{23}L + \mu -127\)</span>带入上式： <span class="math display">\[\begin{align}\log_2(F_y) =&amp; -\frac{1}{2}\log_2(F_x) \\[1ex]2^{-23}L_y + \mu - 127 =&amp; -\frac{1}{2}(2^{-23}L_x + \mu - 127)\\[1ex]2^{-23}L_y =&amp; -\frac{1}{2}(2^{-23}L_x + 3\cdot(\mu - 127))\\[1ex]L_y=&amp; \frac{3}{2}\cdot2^{23}\cdot(127 - \mu) -\frac{1}{2}L_x\end{align}\]</span> 对于上式结果：<span class="math inline">\(L_y=\frac{3}{2}\cdot2^{23} \cdot (127 - \mu) - \frac{1}{2} L_x\)</span></p><blockquote><p><span class="math inline">\(F_x\)</span>表示32位bit的<span class="math inline">\(x\)</span>的浮点数表示，<span class="math inline">\(L_x\)</span>表示32位bit的<span class="math inline">\(x\)</span>的整形表示。在c语言中，二者是可以互相转换的。</p></blockquote><p><strong>前半部分</strong>：<span class="math inline">\(\frac{3}{2}\cdot 2^{23}\cdot (127-\mu) =\mathrm{0x5f3759df}\)</span>，在<span class="math inline">\(\mu=0.04505\)</span>时成立，更通用的，可以使<span class="math inline">\(\mu=0.0430\)</span>。</p><p><strong>后半部分</strong>：<span class="math inline">\(-\frac{1}{2}L_x\)</span>在c语言中可以使用位操作实现：<code>-(Lx &gt;&gt; 1)</code></p><p>故使用c语言实现该表达式为：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">long</span> Ly = <span class="hljs-number">0x5f3759df</span> - (Lx &gt;&gt; <span class="hljs-number">1</span>);<br></code></pre></td></tr></tbody></table></figure><p>即原算法实现中的内容。</p><p>通过该公式可以求出<span class="math inline">\(L_y\)</span>，再在c语言中通过<code>Fy = * (float *) &amp;Ly</code>即可求得<span class="math inline">\(F_y\)</span>。</p><h2 id="牛顿迭代">牛顿迭代</h2><p>在上述推导中，我们用到了<span class="math inline">\(\log_2(x+1)\approx x + \mu\)</span>。</p><p>一般情况下<span class="math inline">\(\mu=0.0430\)</span>，该算法实现中取了<span class="math inline">\(\mu=0.04505\)</span>。都是为了使用<span class="math inline">\(x+\mu\)</span>逼近<span class="math inline">\(\log_x(x+1)\)</span>。</p><p>虽然误差总是不可避免，为了减少这种逻辑上带来的误差，我们需要将误差尽可能的减少。</p><p><strong>牛顿迭代法</strong>是一种用来近似函数零点的方法：</p><figure><img src="https://imgbed.scubot.com/image/image-20211010141648206.png" alt="牛顿迭代"><figcaption aria-hidden="true">牛顿迭代</figcaption></figure><p>对于某复杂函数，我们无法推导出其零点的表达式，或者零点的表达式不利于计算机的计算，我们就可以使用牛顿法来近似得到零点。</p><p>牛顿法的核心思想是：<strong>切线是曲线的线性逼近</strong></p><p>对于某一可导函数，我可以取其定义域内的任意<span class="math inline">\(x\)</span>：</p><ol type="1"><li>在函数上对应<span class="math inline">\(x\)</span>的位置求一阶导数，即函数在<span class="math inline">\(x\)</span>位置的切线。</li><li>该切线与X轴最多有一个交点，如果有交点的话，我们就以该交点为<span class="math inline">\(x\)</span>重复求切线，求切线与X轴交点的这个过程。</li></ol><p><strong>每次求的切线与X轴的交点都更加逼近函数的真正零点</strong>。</p><p>根据上图，容易得到： <span class="math display">\[\begin{align}\Delta x =&amp; \frac{\Delta y}{\frac{\Delta y}{\Delta x}} \\[1ex]\Delta x =&amp; \frac{f(x)}{f^\prime(x)} \\[1ex]x_{new} =&amp; x - \frac{f(x)}{f^\prime(x)}\end{align}\]</span> 对于牛顿法求零点，我们需要知道</p><ol type="1"><li>函数的表达式</li><li>初始迭代值</li></ol><p>所以对于本算法，我们需要构造<span class="math inline">\(y\)</span>的函数，使得其零点为<span class="math inline">\(y=\frac{1}{\sqrt x}\)</span>。</p><p>经过一些变换，我们就可以写出该函数： <span class="math display">\[f(y) = \frac{1}{y^2} - x\]</span> 约束<span class="math inline">\(y&gt;0\)</span>，易得：<span class="math inline">\(f^\prime(y) = -2 \cdot y^{-3}\)</span></p><p>使用牛顿法的前提：函数表达式我们有了，初始迭代值我们也在上面求出来了<span class="math inline">\(F_y\)</span>。</p><p>那就可以开始进行牛顿迭代的推导： <span class="math display">\[\begin{align}y_{new} =&amp; y - \frac{f(y)}{f^\prime(y)} \\[1ex]y_{new} =&amp; y - \frac{y^{-2} - x}{-2 \cdot y^{-3}} \\[1ex]y_{new} =&amp; y + \frac{1}{2} (y - xy^3) \\[1ex]y_{new} =&amp; y(\frac{3}{2} - \frac{1}{2}xy^2)\end{align}\]</span> 我们可以明确上式中：<span class="math inline">\(y\)</span>是迭代的值，初识迭代值为<span class="math inline">\(F_y\)</span>，<span class="math inline">\(x\)</span>为<span class="math inline">\(y=\frac{1}{\sqrt x}\)</span>中的<span class="math inline">\(x\)</span>。</p><p>那么就很容易可以转换成c语言中的：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">Fy = Fy * (<span class="hljs-number">1.5</span> - <span class="hljs-number">0.5</span> * x * Fy * Fy);<br></code></pre></td></tr></tbody></table></figure><p>对应源代码中的：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c">y  = y * ( threehalfs - ( x2 * y * y ) );<br></code></pre></td></tr></tbody></table></figure><p>在该算法过程中，进行一次迭代即可满足精度的需求。</p><p>现在我们就可以把原码进行完整的解释：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">float</span> <span class="hljs-title function_">Q_rsqrt</span><span class="hljs-params">( <span class="hljs-type">float</span> number )</span><br>{<br><span class="hljs-type">long</span> i;<br><span class="hljs-type">float</span> x2, y;<br><span class="hljs-type">const</span> <span class="hljs-type">float</span> threehalfs = <span class="hljs-number">1.5F</span>;   <span class="hljs-comment">// 牛顿迭代中的1.5</span><br><br>x2 = number * <span class="hljs-number">0.5F</span>;<br>y  = number;<br>i  = * ( <span class="hljs-type">long</span> * ) &amp;y;                      <span class="hljs-comment">// 将32bit浮点数y重新解释为32bit整形i</span><br>i  = <span class="hljs-number">0x5f3759df</span> - ( i &gt;&gt; <span class="hljs-number">1</span> );              <span class="hljs-comment">// 对i求反平方根的近似</span><br>y  = * ( <span class="hljs-type">float</span> * ) &amp;i;                      <span class="hljs-comment">// 把32bit整形i重新解释为32bit浮点数y</span><br>y  = y * ( threehalfs - ( x2 * y * y ) );  <span class="hljs-comment">// 第一次牛顿迭代</span><br><span class="hljs-comment">//y  = y * ( threehalfs - ( x2 * y * y ) );   // 第二次迭代，看起来不需要</span><br><br><span class="hljs-keyword">return</span> y;<br>}<br></code></pre></td></tr></tbody></table></figure><h2 id="推广到double类型">推广到double类型</h2><p>以上的算法只针对32位浮点数<code>float</code>，对于64位浮点数<code>double</code>我们也可以应用该思想设计出快速的反平方根算法。</p><p>在<code>double</code>类型的64位bit中： 1. 符号位占1bit 2. 指数位<span class="math inline">\(E\)</span> 占11bit 3. 尾数位<span class="math inline">\(M\)</span> 占52bit</p><p>有了这些数据，我们就可以写出c语言中的函数实现：</p><figure class="highlight c"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">double</span> <span class="hljs-title function_">Q_rsqrt</span><span class="hljs-params">(<span class="hljs-type">double</span> number)</span><br>{<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> i;<br><span class="hljs-type">double</span> x2, y;<br><span class="hljs-type">const</span> <span class="hljs-type">double</span> threehalfs = <span class="hljs-number">1.5F</span>;   <span class="hljs-comment">// 牛顿迭代中的1.5</span><br><br>x2 = number * <span class="hljs-number">0.5F</span>;<br>y  = number;<br>i  = * ( <span class="hljs-type">long</span> <span class="hljs-type">long</span> * ) &amp;y;                       <span class="hljs-comment">// 将64bit浮点数y重新解释为64bit整形i</span><br>i  = <span class="hljs-number">0x5fdd3020c49ba400</span> - ( i &gt;&gt; <span class="hljs-number">1</span> );               <span class="hljs-comment">// 对i求反平方根的近似</span><br>y  = * ( <span class="hljs-type">double</span> * ) &amp;i;                      <span class="hljs-comment">// 把64bit整形i重新解释为64bit浮点数y</span><br>y  = y * ( threehalfs - ( x2 * y * y ) );   <span class="hljs-comment">// 第一次牛顿迭代</span><br><span class="hljs-comment">//y  = y * ( threehalfs - ( x2 * y * y ) );   // 第二次迭代，看起来不需要</span><br><br><span class="hljs-keyword">return</span> y;<br>}<br><br></code></pre></td></tr></tbody></table></figure><p>其中<code>0x5fdd3020c49ba400</code>根据<span class="math inline">\(\mu\)</span>的实际取值不同而不同。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;什么是反平方根&quot;&gt;什么是反平方根&lt;/h2&gt;
&lt;p&gt;反平方根即平方根的倒数：&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math display&quot;&gt;\[
y = \frac{1} {\sqrt x}
\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;该计算表达式在图形学中的向量正规化</summary>
      
    
    
    
    
    <category term="C++" scheme="https://blog.scubot.com/tags/C/"/>
    
    <category term="C" scheme="https://blog.scubot.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++-架构之路</title>
    <link href="https://blog.scubot.com/article/12ad/"/>
    <id>https://blog.scubot.com/article/12ad/</id>
    <published>2021-09-16T07:40:58.000Z</published>
    <updated>2024-08-20T00:57:09.091Z</updated>
    
    <content type="html"><![CDATA[<p>我的c++架构之路-1</p><span id="more"></span><h1 id="异步">异步</h1><h2 id="feature">feature</h2><p>当在一个线程中，创建了一个异步操作（asynchronousoperations）时，该异步操作会返回一个<code>feature</code>对象，可以通过其访问异步操作的状态和结果等。</p><p>创建异步操作一般有三种方式：<code>std::async</code>、<code>std::packaged_task</code>和<code>std::promise</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;我的c++架构之路-1&lt;/p&gt;</summary>
    
    
    
    
    <category term="C++" scheme="https://blog.scubot.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C++小技巧-Lambda表达式</title>
    <link href="https://blog.scubot.com/article/808a/"/>
    <id>https://blog.scubot.com/article/808a/</id>
    <published>2021-04-14T14:29:58.000Z</published>
    <updated>2024-08-20T00:57:09.090Z</updated>
    
    <content type="html"><![CDATA[<p>由于最近项目中用到了C++ Lambda表达式的相关内容，在这里记录一下。</p><span id="more"></span><h2 id="什么是lambda表达式">什么是Lambda表达式</h2><p>我自己理解的是Lambda表达式就是不需要复杂逻辑的匿名函数，在很多高级语言中都有。</p><p>比如Python中：</p><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">my_list = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>new_list = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: <span class="hljs-string">'new'</span> + <span class="hljs-built_in">str</span>(x), my_list))<br></code></pre></td></tr></tbody></table></figure><p>就可以在map中使用Lambda表达式使得程序更加简洁。</p><h2 id="c的lambda表达式">C++的Lambda表达式</h2><p>C++11提供了Lambda表达式的功能，完整声明的格式如下： </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++">[capture_list] (params_list) <span class="hljs-keyword">mutable</span> exception -&gt; return_type { function_body }<br></code></pre></td></tr></tbody></table></figure><div class="note note-success">            <p>各项定义如下： -<code>capture_list</code>：捕获列表，用于捕获外部变量 -<code>params_list</code>：形参列表 -<code>mutable</code>：是否可以修改捕获的外部变量 -<code>exception</code>：异常设定 - <code>return_type</code>：返回类型 -<code>function_body</code>：函数体</p>          </div><p></p><p>这6部分中，除了<code>capture_list</code>和<code>function_body</code>，其他4部分都是可选的。</p><p>常见的情况有以下三种： -<code>[capture_list](params_list) -&gt; return_type { function_body }</code>- <code>[capture_list](params_list) { function_body }</code> &gt;省略返回类型，编译器可以根据规则推断出Lambda表达式的返回类型。 &gt;即如果Lambda表达式中出现return，则根据return的类型确定， &gt;如果没有return，则返回类型为void。 &gt; <strong>在项目中最常用</strong>- <code>[capture_list] { function_body }</code></p><h2 id="捕获外部变量-进阶说明">捕获外部变量-进阶说明</h2><p>在C++中，函数参数的传递方式有三种：值传递、引用传递和指针传递。</p><p>Lambda表达式的外部变量捕获方式有三种：值捕获、引用捕获和隐式捕获。</p><h3 id="值捕获">1.值捕获</h3><p>在<code>capture_list</code>中直接传入变量值，<span style="color: #519D9E; ">在Lambda表达式构建时，外部变量将通过值拷贝的方式传入，如果后面外部变量被修改，也不会影响Lambda表达式中的值</span></p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>    <span class="hljs-type">int</span> val = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">auto</span> func = [val] { cout &lt;&lt; val &lt;&lt; endl; };<br>    val = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">func</span>(); <span class="hljs-comment">// 输出 0</span><br>}<br></code></pre></td></tr></tbody></table></figure><h3 id="引用捕获">2.引用捕获</h3><p>在外部变量名前加<code>&amp;</code>，使用引用捕获的变量，将会在Lambda表达式中与外部变量绑定。在表达式构造结束，该外部变量变化之后再调用Lambda表达式，这时会使用最新的外部变量对象。</p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>    <span class="hljs-type">int</span> val = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">auto</span> func = [&amp;val] { cout &lt;&lt; val &lt;&lt; endl; };<br>    val = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">func</span>(); <span class="hljs-comment">// 输出 1</span><br>}<br></code></pre></td></tr></tbody></table></figure><h3 id="隐式捕获">3.隐式捕获</h3><p>除了在<code>capture_list</code>中指定外界变量名之外，还可以用隐式捕获的办法，即让Lambda表达式自行推断需要哪些外部变量。隐式捕获具体有两种：- <code>[=]</code> 表示以值捕获的方式捕获外界变量 </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>    <span class="hljs-type">int</span> val = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">auto</span> func = [=] { cout &lt;&lt; val &lt;&lt; endl; };<br>    val = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">func</span>(); <span class="hljs-comment">// 输出 0</span><br>}<br></code></pre></td></tr></tbody></table></figure> -<code>[&amp;]</code> 表示以引用捕获的方式捕获外界变量 <figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>    <span class="hljs-type">int</span> val = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">auto</span> func = [&amp;] { cout &lt;&lt; val &lt;&lt; endl; };<br>    val = <span class="hljs-number">1</span>;<br>    <span class="hljs-built_in">func</span>(); <span class="hljs-comment">// 输出 1</span><br>}<br></code></pre></td></tr></tbody></table></figure><p></p><h3 id="混合捕获">4.混合捕获</h3><p>C++11中的Lambda表达式支持将以上三种捕获方式混用，常见的情况如下：</p><table><thead><tr><th>捕获形式</th><th>说明</th></tr></thead><tbody><tr><td><code>[]</code></td><td>不捕获外部变量</td></tr><tr><td><code>[a, b, ...]</code></td><td>全部以值捕获捕捉</td></tr><tr><td><code>[this]</code></td><td>捕获<code>this</code>指针</td></tr><tr><td><code>[=]</code></td><td>值捕获所有外部变量</td></tr><tr><td><code>[&amp;]</code></td><td>引用捕获所有外部变量</td></tr><tr><td><code>[=, &amp;a]</code></td><td>变量<code>a</code>使用引用捕获，其他使用值捕获</td></tr><tr><td><code>[&amp;, a]</code></td><td>变量<code>a</code>使用值捕获，其他使用引用捕获</td></tr></tbody></table><h3 id="捕获外部变量并修改">捕获外部变量并修改</h3><p>当外部参数采用<strong>值捕获</strong>时，在<code>function_body</code>函数体内部无法修改捕获的外部变量值，会提示<code>read-only</code>。这时需要添加<code>mutable</code>关键字。 </p><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>    <span class="hljs-type">int</span> val = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">auto</span> func = [val]() <span class="hljs-keyword">mutable</span> { cout &lt;&lt; ++val &lt;&lt; endl; };<br>    <span class="hljs-built_in">func</span>(); <span class="hljs-comment">// 输出 1</span><br>    cout &lt;&lt; val &lt;&lt; endl; <span class="hljs-comment">// 输出 0</span><br>}<br></code></pre></td></tr></tbody></table></figure> <div class="note note-info">            <p>如果使用<strong>引用捕获</strong>，则不需要添加<code>mutable</code>关键字，在Lambda表达式中更改的内容会直接影响到外部变量。</p>          </div><p></p><h2 id="lambda表达式参数params_list的限制">Lambda表达式参数<code>params_list</code>的限制</h2><p>Lambda表达式的参数和普通函数的参数类似，不过有一些限制：</p><ol type="1"><li>参数列表中不能有默认参数</li><li>不支持可变参数，即用<code>...</code>表示的参数，不定个数。</li><li>所有参数必须有参数名</li></ol><h2 id="其他例子">其他例子</h2><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;functional&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{<br>    <span class="hljs-keyword">auto</span> funcA = [](<span class="hljs-type">int</span> x) -&gt; function&lt;<span class="hljs-built_in">int</span>(<span class="hljs-type">int</span>, <span class="hljs-type">int</span>)&gt; { <span class="hljs-keyword">return</span> [=](<span class="hljs-type">int</span> y, <span class="hljs-type">int</span> z) { <span class="hljs-built_in">return</span> (x + y) * z; }; };<br><br>    cout &lt;&lt; <span class="hljs-built_in">funcA</span>(<span class="hljs-number">2</span>)(<span class="hljs-number">4</span>, <span class="hljs-number">8</span>) &lt;&lt; endl; <span class="hljs-comment">// 输出 48      (2 + 4) * 8 = 48</span><br><br>    <span class="hljs-keyword">auto</span> funcB = [](<span class="hljs-type">const</span> function&lt;<span class="hljs-built_in">int</span>(<span class="hljs-type">int</span>, <span class="hljs-type">int</span>)&gt;&amp; func, <span class="hljs-type">int</span> valA, <span class="hljs-type">int</span> valB) { <span class="hljs-keyword">return</span> -<span class="hljs-built_in">func</span>(valA, valB); };<br><br>    cout &lt;&lt; <span class="hljs-built_in">funcB</span>(<span class="hljs-built_in">funcA</span>(<span class="hljs-number">3</span>), <span class="hljs-number">6</span>, <span class="hljs-number">9</span>) &lt;&lt; endl;  <span class="hljs-comment">// 输出 -81    -(2 + 6) * 9</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>}}<br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;由于最近项目中用到了C++ Lambda表达式的相关内容，在这里记录一下。&lt;/p&gt;</summary>
    
    
    
    
    <category term="C++" scheme="https://blog.scubot.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>qqbot插件-闪照转发</title>
    <link href="https://blog.scubot.com/article/51135/"/>
    <id>https://blog.scubot.com/article/51135/</id>
    <published>2021-04-06T14:50:50.000Z</published>
    <updated>2024-08-20T00:57:09.092Z</updated>
    
    <content type="html"><![CDATA[<div class="note note-primary">            <p>该QQ机器人使用<a href="https://github.com/Mrs4s/go-cqhttp">go-cqhttp</a>和<a href="https://github.com/nonebot/nonebot">nonebot</a>框架。</p>          </div><p>利用改框架，可以实现破解闪照并转发到指定qq号的功能</p><span id="more"></span><h2 id="原理">原理</h2><p>qq的特殊消息都可以表示为CQ码(纪念原来的酷Q)，CQ码文档可以参考<a href="https://docs.go-cqhttp.org/guide/achieve.html">go-cqhttp文档</a>。</p><p>我们需要的闪照的CQ码是这样的格式： </p><figure class="highlight mel"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mel">[CQ:<span class="hljs-keyword">image</span>,type=flash,<span class="hljs-keyword">file</span>=xxxx.<span class="hljs-keyword">image</span>]<br></code></pre></td></tr></tbody></table></figure>去掉<code>type=flash,</code>即可表示为正常的图片。<p></p><p>所以反闪照插件的功能思路就是：</p><ol type="1"><li>利用正则表达式：<code>\[CQ:image,type=flash,file=.*?\]</code>捕获Bot接收到的所有闪照CQ码</li><li>解析出发送者，所在群号以及CQ码的全部信息</li><li>将CQ码中的<code>type=flash,</code>去掉，再私聊转发给预设的qq号即可</li></ol><div class="note note-danger">            <p><code>NoneBot2</code>中提供了<code>on_regex</code>装饰器，可以直接正则监视所有满足条件的消息，</p><p>而NoneBot1并未提供类似<code>on_regex</code>的正则匹配装饰器，所以需要用<code>on_message</code>监听所有消息，再对消息进行正则过滤。</p><p>为了减少计算压力，只监听群聊中的消息即可。</p>          </div><h2 id="源码">源码</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">from</span> nonebot <span class="hljs-keyword">import</span> get_bot<br><br>target_user = <span class="hljs-number">765892480</span><br><br>pattens = re.<span class="hljs-built_in">compile</span>(<span class="hljs-string">r"\[CQ:image,type=flash,file=.*?\]"</span>)<br><br>bot = get_bot()<br><br><span class="hljs-meta">@bot.on_message(<span class="hljs-params"><span class="hljs-string">"group"</span></span>)</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">def</span> <span class="hljs-title function_">AntiFlashImage</span>(<span class="hljs-params">event</span>):<br>    raw_info = (<span class="hljs-keyword">await</span> bot.get_msg(message_id=event.message_id))<br>    raw_message = raw_info[<span class="hljs-string">"raw_message"</span>]<br>    <span class="hljs-keyword">if</span> re.<span class="hljs-keyword">match</span>(pattens, raw_message):<br>        image_ = raw_message.replace(<span class="hljs-string">'type=flash,'</span>, <span class="hljs-string">''</span>)<br>        new_message = (<br>            <span class="hljs-string">f"在群(<span class="hljs-subst">{raw_info[<span class="hljs-string">'group_id'</span>]}</span>)中捕获闪照\n"</span><br>            <span class="hljs-string">f"发送者：<span class="hljs-subst">{raw_info[<span class="hljs-string">'sender'</span>][<span class="hljs-string">'nickname'</span>]}</span>(<span class="hljs-subst">{raw_info[<span class="hljs-string">'sender'</span>][<span class="hljs-string">'user_id'</span>]}</span>)\n"</span><br>            <span class="hljs-string">f"<span class="hljs-subst">{image_}</span>"</span><br>        )<br>        <span class="hljs-keyword">await</span> bot.send_private_msg(user_id=target_user, message=new_message)<br><br></code></pre></td></tr></tbody></table></figure><h2 id="效果图">效果图</h2><blockquote><p>群聊发送闪图</p></blockquote><p><img src="https://imgbed.scubot.com/1617721464951.png"></p><blockquote><p>Bot私聊转发原图</p></blockquote><p><img src="https://imgbed.scubot.com/1617721489042.png"></p>]]></content>
    
    
    <summary type="html">&lt;div class=&quot;note note-primary&quot;&gt;
            &lt;p&gt;该QQ机器人使用&lt;a href=&quot;https://github.com/Mrs4s/go-cqhttp&quot;&gt;go-cqhttp&lt;/a&gt;和&lt;a href=&quot;https://github.com/nonebot/nonebot&quot;&gt;nonebot&lt;/a&gt;框架。&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;利用改框架，可以实现破解闪照并转发到指定qq号的功能&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://blog.scubot.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="qqbot" scheme="https://blog.scubot.com/tags/qqbot/"/>
    
  </entry>
  
  <entry>
    <title>运维记录</title>
    <link href="https://blog.scubot.com/article/7b14/"/>
    <id>https://blog.scubot.com/article/7b14/</id>
    <published>2021-02-05T07:48:32.000Z</published>
    <updated>2024-08-20T00:57:09.095Z</updated>
    
    <content type="html"><![CDATA[<p>用来记录我操作ubuntu系/windows服务器的一些需要注意的点<span id="more"></span></p><h2 id="版本">版本</h2><p>我一直用的是ubuntu的服务器，更关心服务器版本。</p><p>ubuntu目前稳定版为LTS(Long-Term-Support)，每两年发布一次，且永久免费。</p><p>国内不同服务器厂商提供的ubuntu云服务器不尽相同：</p><ul><li>[三丰云] 只提供 14.04LTS和16.04LTS</li><li>[青云] 与 [阿里云] 都提供 18.04LTS</li><li>[腾讯云] 提供20.04LTS</li></ul><h3 id="升级版本">升级版本</h3><p>根据ssh登录服务器后的提示，使用指令<code>do-release-upgrade</code>即可升级版本</p><h2 id="apt相关">apt相关</h2><h3 id="使用apt还是apt-get">使用<code>apt</code>还是<code>apt-get</code>？</h3><p>泛泛来讲<code>apt</code>是<code>apt-get</code>的封装，对用户更加友好，也能显示更多的安装信息。以下的指令我都以<code>apt</code>为准。</p><h3 id="更新与换源">更新与换源</h3><p>初次使用root登陆服务器之后先：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt update -y &amp;&amp; apt upgrade -y <span class="hljs-comment"># 更新服务器软件包</span><br></code></pre></td></tr></tbody></table></figure><p>一般大厂会在云服务器预置自家的apt镜像，如果没有的话可以自己更换apt的源：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak <span class="hljs-comment"># 备份</span><br><br>vim /etc/apt/sources.list <span class="hljs-comment"># 编辑源 </span><br></code></pre></td></tr></tbody></table></figure><p>删掉原来的内容，添加进以下内容，我这里用阿里源(18.04LTS)：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse<br></code></pre></td></tr></tbody></table></figure><p>保存退出之后再更新一下包管理器即可：<code>apt update</code></p><p><strong>注意</strong></p><p>不同操作系统版本对应的源不一定相同，可能换源之后会遇到有些软件包安装不了的情况，可以考虑换成初始的源，安装之后再换回来。</p><h3 id="基础软件包">基础软件包</h3><ul><li>gcc编译器以及一些基础的通用程序安装：<code>apt install build-essential</code></li><li>通用软件包：<code>apt install software-properties-common</code></li></ul><h2 id="添加用户">添加用户</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> adduser &lt;name&gt;<br><br><span class="hljs-built_in">sudo</span> usermod -aG <span class="hljs-built_in">sudo</span> &lt;name&gt; <span class="hljs-comment"># 赋予sudo权限</span><br><br>su &lt;name&gt; <span class="hljs-comment"># 切换用户</span><br></code></pre></td></tr></tbody></table></figure><h2 id="git相关">Git相关</h2><p>下载好git之后，设置ssh-key</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -C <span class="hljs-string">"email"</span><br><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub<br></code></pre></td></tr></tbody></table></figure><p>如果<code>git clone</code>失败，考虑在<code>~/.ssh/config</code>中添加</p><figure class="highlight nginx"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">HostkeyAlgorithms</span> +ssh-rsa<br>PubkeyAcceptedAlgorithms +ssh-rsa<br></code></pre></td></tr></tbody></table></figure><h2 id="python相关">Python相关</h2><h3 id="升级版本-1">升级版本</h3><p>一般服务器自带的python版本是3.5或者3.6，如果要用python写东西，建议使用高版本。</p><blockquote><p>3.6版本新出了一种语法：f-string，写起来很方便</p></blockquote><p>手动升级版本：</p><ol type="1"><li><p>安装依赖</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> apt update -y &amp;&amp; apt install -y build-essential zlib1g-dev libbz2-dev libssl-dev libncurses5-dev libsqlite3-dev libreadline-dev tk-dev libgdbm-dev libdb-dev libpcap-dev xz-utils libexpat1-dev liblzma-dev libffi-dev libc6-dev<br></code></pre></td></tr></tbody></table></figure><p></p></li><li><p>去官网：https://www.python.org/downloads/source/找到最新的稳定版(Stable Releases)为3.8.7，使用wget下载</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget <span class="hljs-string">'https://www.python.org/ftp/python/3.8.7/Python-3.8.7.tgz'</span> <br><br>tar zxvf Python-3.8.7.tgz  <span class="hljs-comment"># 解压</span><br></code></pre></td></tr></tbody></table></figure><p></p></li><li><p>编译源码</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> Python-3.8.7 <br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> -p /usr/local/python3  <span class="hljs-comment"># 建立安装目录</span><br><br><span class="hljs-comment"># --enable-optimizations 会自动安装pip3以及优化配置，建议加上</span><br>./configure --prefix=/usr/local/python3 --enable-optimizations<br><br>make<br><span class="hljs-built_in">sudo</span> make install <span class="hljs-comment"># 编译</span><br></code></pre></td></tr></tbody></table></figure><p></p></li><li><p>更新软连接</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 删除旧连接</span><br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">rm</span> -rf /usr/bin/python3<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">rm</span> -rf /usr/bin/pip3<br><br><span class="hljs-comment"># 添加新连接</span><br><span class="hljs-comment"># 注意这里 python3.8根据实际情况更改，可能是3.7 / 3.9 xxx</span><br><span class="hljs-comment">#添加python3的软链接</span><br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/python3.8 /usr/bin/python3<br><span class="hljs-comment">#添加 pip3 的软链接</span><br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/pip3.8 /usr/bin/pip3<br></code></pre></td></tr></tbody></table></figure><p></p></li><li><p>检测版本</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 -V<br><br>pip3 -V<br></code></pre></td></tr></tbody></table></figure><p></p></li></ol><h3 id="anaconda">Anaconda</h3><div class="note note-info">            <p>仅对windows操作系统</p>          </div><ul><li>下载安装anaconda之后，手动添加环境变量：<code>[...]/anaconda3/Scripts/</code></li><li>安装<a href="https://slproweb.com/products/Win32OpenSSL.html">OpenSSL</a></li><li><code>conda env create -n "name" -f "yaml"</code> or<code>conda env create -n "name" python=3.9</code></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;用来记录我操作ubuntu系/windows服务器的一些需要注意的点&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://blog.scubot.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="服务器" scheme="https://blog.scubot.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>SCU教务处爬虫记录</title>
    <link href="https://blog.scubot.com/article/1497/"/>
    <id>https://blog.scubot.com/article/1497/</id>
    <published>2021-01-06T09:50:14.000Z</published>
    <updated>2024-08-20T00:57:09.092Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>记录爬取<a href="http://zhjw.scu.edu.cn/">scu教务处</a>的事项。</p><span id="more"></span><h2 id="模拟登陆">模拟登陆</h2><p>使用<code>requests.session()</code>保存爬虫状态</p><p>首先需要进行登录：</p><p>前往登录界面，F12打开network，输入错误的登录信息可以查看网络请求记录。</p><p><img src="https://imgbed.scubot.com/scu_spider-1.png"></p><p>真正有用的登录请求信息已经标出。</p><p>只需要对照着<code>General</code>中的<code>Request Method</code>(POST)、<code>Request Headers</code>和<code>Form Data</code></p><p>使用<code>requests.session</code>进行请求即可。</p><p><strong>注意</strong></p><ol type="1"><li><code>Form Data</code>中的<code>_spring_security_remember_me</code>参数是装了基兄的scu插件才能看到，加上这个参数可以增加session的保存时间，不需要每次爬取信息都要登录一遍。</li><li><code>Form Data</code>中的<code>j_password</code>不是明文密码，而是<code>MD5</code>加密后的密码。</li><li><code>Request Headers</code>一定要打对，<code>Cookie</code>参数可以忽略。</li><li>验证码可以先用<code>GET</code>方法获取，再<code>POST</code>登陆。</li></ol><h2 id="爬取姓名头像">爬取姓名&amp;头像</h2><h2 id="爬取课表">爬取课表</h2><h2 id="参考代码">参考代码</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">from</span> io <span class="hljs-keyword">import</span> BytesIO<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">JWCSpider</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, username, password</span>):<br>        <span class="hljs-variable language_">self</span>.username = username<br>        <span class="hljs-variable language_">self</span>.password = <span class="hljs-variable language_">self</span>.__md5preFix(password)<br>        <span class="hljs-variable language_">self</span>.session = requests.session()<br>        <span class="hljs-variable language_">self</span>.headers = {<br>            <span class="hljs-string">'Accept'</span>: <span class="hljs-string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span>,<br>            <span class="hljs-string">'Accept-Encoding'</span>: <span class="hljs-string">'gzip, deflate'</span>,<br>            <span class="hljs-string">'Accept-Language'</span>: <span class="hljs-string">'zh-CN,zh;q=0.9,en;q=0.8'</span>,<br>            <span class="hljs-string">'Connection'</span>: <span class="hljs-string">'keep-alive'</span>,<br>            <span class="hljs-string">'Host'</span>: <span class="hljs-string">'zhjw.scu.edu.cn'</span>,<br>            <span class="hljs-string">'Referer'</span>: <span class="hljs-string">'http://zhjw.scu.edu.cn/login'</span>,<br>            <span class="hljs-string">'Upgrade-Insecure-Requests'</span>: <span class="hljs-string">'1'</span>,<br>            <span class="hljs-string">'User-Agent'</span>: <span class="hljs-string">'Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.88 Mobile Safari/537.36'</span>,<br>            <span class="hljs-string">'Origin'</span>:<span class="hljs-string">'http://zhjw.scu.edu.cn'</span>,<br>        }<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__md5preFix</span>(<span class="hljs-params">self, password: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">str</span>:<br>        ins_md5 = hashlib.md5()<br>        ins_md5.update(password.encode(<span class="hljs-string">'utf-8'</span>))<br>        <span class="hljs-keyword">return</span> ins_md5.hexdigest()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get_captcha</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">'http://zhjw.scu.edu.cn/img/captcha.jpg'</span><br>        captcha_img = <span class="hljs-variable language_">self</span>.session.get(url).content<br>        img = Image.<span class="hljs-built_in">open</span>(BytesIO(captcha_img))<br>        img = img.convert(<span class="hljs-string">'L'</span>)<br>        img.save(<span class="hljs-string">'captcha.jpg'</span>)<br>        captcha = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">'验证码：'</span>))<br>        <span class="hljs-keyword">return</span> captcha<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__tofile</span>(<span class="hljs-params">self, content: <span class="hljs-built_in">str</span>, filename: <span class="hljs-built_in">str</span> = <span class="hljs-string">'format.html'</span></span>):<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(filename, <span class="hljs-string">'w'</span>, encoding=<span class="hljs-string">'utf-8'</span>) <span class="hljs-keyword">as</span> ofile:<br>            ofile.write(content)<br><br>    <span class="hljs-comment"># 登录教务处</span><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">login_in</span>(<span class="hljs-params">self</span>) -&gt; <span class="hljs-built_in">str</span>:<br>        url = <span class="hljs-string">'http://zhjw.scu.edu.cn/j_spring_security_check'</span><br>        data = {<br>            <span class="hljs-string">'j_username'</span>: <span class="hljs-variable language_">self</span>.username,<br>            <span class="hljs-string">'j_password'</span>: <span class="hljs-variable language_">self</span>.password,<br>            <span class="hljs-string">'j_captcha'</span>: <span class="hljs-variable language_">self</span>.__get_captcha()<br>        }<br>        <span class="hljs-keyword">try</span>:<br>            response = <span class="hljs-variable language_">self</span>.session.post(url, data = data, headers=<span class="hljs-variable language_">self</span>.headers)<br>        <span class="hljs-keyword">except</span> ConnectionError:<br>            <span class="hljs-keyword">return</span> (<span class="hljs-string">'error'</span>, <span class="hljs-string">'网络连接登录错误'</span>)<br>        <span class="hljs-keyword">except</span> TimeoutError:<br>            <span class="hljs-keyword">return</span> (<span class="hljs-string">'error'</span>, <span class="hljs-string">'访问超时登录错误'</span>)<br><br>        isError  = re.findall(<span class="hljs-string">r'errorCode='</span>, response.content.decode(<span class="hljs-string">'utf-8'</span>))<br>        <span class="hljs-keyword">if</span> isError:                             <span class="hljs-comment"># 判断账号密码是否正确</span><br>            <span class="hljs-keyword">return</span> (<span class="hljs-string">'error'</span>, <span class="hljs-string">'账号或者密码错误'</span>)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> (<span class="hljs-string">'ok'</span>, <span class="hljs-string">'登录成功'</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_planCompletion</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">'http://zhjw.scu.edu.cn/student/integratedQuery/planCompletion/index'</span><br>        <span class="hljs-comment"># response = self.session.get(url, headers=self.headers)</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Accept'</span>] = <span class="hljs-string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Referer'</span>] = <span class="hljs-string">'http://zhjw.scu.edu.cn/student/integratedQuery/course/courseSchdule/index'</span><br>        response = <span class="hljs-variable language_">self</span>.session.get(url, headers=<span class="hljs-variable language_">self</span>.headers)<br>        <span class="hljs-comment"># print(re.text)</span><br>        <span class="hljs-variable language_">self</span>.__tofile(response.text)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_courseTable</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">'http://zhjw.scu.edu.cn/student/courseSelect/thisSemesterCurriculum/ajaxStudentSchedule/curr/callback'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Accept'</span>] = <span class="hljs-string">'*/*'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Referer'</span>] = <span class="hljs-string">'http://zhjw.scu.edu.cn/student/courseSelect/thisSemesterCurriculum/index'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'X-Requested-With'</span>] = <span class="hljs-string">'XMLHttpRequest'</span><br>        response = <span class="hljs-variable language_">self</span>.session.get(url, headers=<span class="hljs-variable language_">self</span>.headers)<br>        <span class="hljs-comment"># print(re.text)</span><br>        <span class="hljs-variable language_">self</span>.__tofile(response.text, <span class="hljs-string">"coursetable.json"</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_courseSection</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">"http://zhjw.scu.edu.cn/ajax/getSectionAndTime"</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">"Accept"</span>] = <span class="hljs-string">"application/json, text/javascript, */*; q=0.01"</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">"Referer"</span>] = <span class="hljs-string">"http://zhjw.scu.edu.cn/student/courseSelect/thisSemesterCurriculum/index"</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'X-Requested-With'</span>] = <span class="hljs-string">'XMLHttpRequest'</span><br>        response = <span class="hljs-variable language_">self</span>.session.post(url, headers=<span class="hljs-variable language_">self</span>.headers, data={<span class="hljs-string">"planNumber"</span>:<span class="hljs-string">""</span>, <span class="hljs-string">"ff"</span>: <span class="hljs-string">"f"</span>})<br>        <span class="hljs-variable language_">self</span>.__tofile(response.text, <span class="hljs-string">"format.json"</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_studentPic</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">'http://zhjw.scu.edu.cn/main/queryStudent/img?715.0'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Accept'</span>] = <span class="hljs-string">'image/avif,image/webp,image/apng,image/*,*/*;q=0.8'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Referer'</span>] = <span class="hljs-string">'http://zhjw.scu.edu.cn/student/courseSelect/thisSemesterCurriculum/index'</span><br>        stdPic = <span class="hljs-variable language_">self</span>.session.get(url, headers=<span class="hljs-variable language_">self</span>.headers).content<br>        img = Image.<span class="hljs-built_in">open</span>(BytesIO(stdPic))<br>        img.save(<span class="hljs-string">'student.jpg'</span>)<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_name</span>(<span class="hljs-params">self</span>):<br>        url = <span class="hljs-string">'http://zhjw.scu.edu.cn/student/rollManagement/rollInfo/index'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Accept'</span>] = <span class="hljs-string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9'</span><br>        <span class="hljs-variable language_">self</span>.headers[<span class="hljs-string">'Referer'</span>] = <span class="hljs-string">'http://zhjw.scu.edu.cn/'</span><br>        response = <span class="hljs-variable language_">self</span>.session.get(url, headers=<span class="hljs-variable language_">self</span>.headers)<br>        res = re.findall(<span class="hljs-string">r'title=".*的照片'</span>, response.content.decode(<span class="hljs-string">'utf-8'</span>))<br>        <span class="hljs-built_in">print</span>(res[<span class="hljs-number">0</span>][<span class="hljs-number">7</span>:].replace(<span class="hljs-string">'的照片'</span>, <span class="hljs-string">''</span>))<br><br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">main</span>():<br>    check = JWCSpider(<span class="hljs-string">'studentid'</span>, <span class="hljs-string">'password'</span>)<br>    <span class="hljs-built_in">print</span>(check.login_in())<br>    check.get_studentPic()<br>    check.get_courseSection()<br>   <br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:<br>    main()<br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;记录爬取&lt;a href=&quot;http://zhjw.scu.edu.cn/&quot;&gt;scu教务处&lt;/a&gt;的事项。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://blog.scubot.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="Python" scheme="https://blog.scubot.com/tags/Python/"/>
    
    <category term="爬虫" scheme="https://blog.scubot.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>搭建私人云盘</title>
    <link href="https://blog.scubot.com/article/b055/"/>
    <id>https://blog.scubot.com/article/b055/</id>
    <published>2020-12-31T07:22:54.000Z</published>
    <updated>2024-08-20T00:57:09.093Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>一步一步从购买服务器开始，记录搭建私人云盘的过程。我是用的是<code>Ubuntu 20.04.1 LTS 64bit</code>与OwnCloud搭建的。</p><span id="more"></span><h2 id="购买服务器">购买服务器</h2><p>国内的服务器带宽都不高，阿里云的轻量应用可以有5M带宽，但是云盘只有40G不支持扩容。腾讯云不支持优惠续费，所以我直接购买了<a href="https://www.qingcloud.com/">青云</a>的单核2G2M的服务器，云盘50G可以扩容，买了一年，用来搭建我的云盘。</p><h2 id="选用owncloud">选用OwnCloud</h2><p><a href="https://owncloud.com/">OwnCloud</a>是领先的开源文件共享和云协作平台，功能和DropBox类似。owncloud可以支持共享文件与跨设备访问等。</p><h2 id="在ubuntu上部署owncloud">在Ubuntu上部署OwnCloud</h2><blockquote><p>如果是Ubuntu18版本的直接参考https://www.linuxidc.com/Linux/2020-03/162651.htm，下面的内容主要是针对Ubutun20版本</p></blockquote><h3 id="安装环境">安装环境</h3><ol type="1"><li><p>更新系统软件包<code>sudo apt update -y &amp;&amp; sudo apt upgrade -y</code></p></li><li><p>因为OwnCloud是用PHP构建的，所以要安装MariaDB和PHP</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">### 安装MySql(mariadb)</span><br><span class="hljs-built_in">sudo</span> apt install mariadb-server  mariadb-client<br><span class="hljs-comment">### 安装php</span><br><span class="hljs-built_in">sudo</span> apt install software-properties-common<br><span class="hljs-built_in">sudo</span> add-apt-repository ppa:ondrej/php <span class="hljs-comment"># 添加php源</span><br><span class="hljs-comment"># 安装php模块，因为OwnCloud支持的php版本范围为7.2~7.5，Ubuntu18可以直接安装7.2版本，Ubuntu20就安装7.4即可</span><br><span class="hljs-built_in">sudo</span> apt update<br><span class="hljs-built_in">sudo</span> apt install php7.4 php7.4-fpm php7.4-curl php7.4-gd php7.4-zip php7.4-dom php7.4-intl php7.4-mbstring php7.4-xml libapache2-mod-php7.4 php7.4-pgsql php7.4-sqlite3 php7.4-mysql<br></code></pre></td></tr></tbody></table></figure><p></p><p>验证安装</p><p>输入<code>php -v</code>，验证：</p><p><img src="https://imgbed.scubot.com/owncloud-1.png"></p><p>输入<code>sudo systemctl status mariadb</code>，验证：</p><p><img src="https://imgbed.scubot.com/owncloud-2.png"></p></li><li><p>安装网络服务系统Apache：<code>sudo apt install apache2</code>，输入<code>sudo dpkg -l apache2</code>验证安装：</p><p><img src="https://imgbed.scubot.com/owncloud-3.png"></p></li></ol><h3 id="配置环境">配置环境</h3><ol type="1"><li><p>开启Apache服务</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装apache的时候默认是开启的</span><br><span class="hljs-built_in">sudo</span> systemctl start apache2<br></code></pre></td></tr></tbody></table></figure><p></p><p>开启服务器的http80端口，即可访问http://serverip看到Apache的页面。</p></li><li><p>默认情况下MariaDB是不安全的，需要执行其他步骤来强化MariaDB服务器：</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mysql_secure_installation<br></code></pre></td></tr></tbody></table></figure><p></p><p>在提示输入root密码时按回车，在询问是否更改root密码时输入Y，之后设置根密码，设置根密码后一路回车。</p></li><li><p>建立OwnCloud数据库</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> mysql -u root -p<br></code></pre></td></tr></tbody></table></figure><p></p><p>输入根密码，进入SQL命令行</p><p></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs mysql">CREATE DATABASE &lt;数据库名&gt;;<br>CREATE USER '&lt;用户名&gt;'@'localhost' IDENTIFIED BY '&lt;数据库密码&gt;';<br>GRANT ALL ON &lt;数据库名称&gt;.* TO '&lt;数据库用户名&gt;'@'localhost' WITH GRANT OPTION;<br>FLUSH PRIVILEGES;<br>EXIT;<br></code></pre></td></tr></tbody></table></figure><p></p><p><img src="https://imgbed.scubot.com/owncloud-4.png"></p></li><li><p>下载&amp;解压<a href="https://download.owncloud.org/community/">OwnCloud压缩包</a></p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 我写博客时最新版本是10.6.0</span><br><span class="hljs-built_in">sudo</span> wget https://download.owncloud.org/community/owncloud-10.6.0.zip<br><span class="hljs-built_in">sudo</span> apt install upzip -y<br><span class="hljs-comment"># 解压到/var/www/路径  可以根据自己需求更改，更改路径之后 配置文件中的/var/www都需要对应更改</span><br><span class="hljs-built_in">sudo</span> unzip owncloud-10.6.0.zip -d /var/www/<br></code></pre></td></tr></tbody></table></figure><p></p></li><li><p>为OwnCloud配置Apache服务</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> vim /etc/apache2/conf-available/owncloud.conf <span class="hljs-comment"># 编辑apache配置文件</span><br></code></pre></td></tr></tbody></table></figure><p></p><p>写入以下内容：</p><p></p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Alias</span> / <span class="hljs-string">"/var/www/owncloud/"</span><br><br><span class="hljs-section">&lt;Directory /var/www/owncloud/&gt;</span><br>  <span class="hljs-attribute">Options</span> +FollowSymlinks<br>  <span class="hljs-attribute">AllowOverride</span> <span class="hljs-literal">All</span><br><br> <span class="hljs-section">&lt;IfModule mod_dav.c&gt;</span><br>  <span class="hljs-attribute">Dav</span> <span class="hljs-literal">off</span><br> <span class="hljs-section">&lt;/IfModule&gt;</span><br><br> <span class="hljs-attribute">SetEnv</span> HOME /var/www/owncloud<br> <span class="hljs-attribute">SetEnv</span> HTTP_HOME /var/www/owncloud<br><br><span class="hljs-section">&lt;/Directory&gt;</span><br></code></pre></td></tr></tbody></table></figure><p></p><p>启用Apache的模块和配置：</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> a2enconf owncloud<br><span class="hljs-built_in">sudo</span> a2enmod rewrite<br><span class="hljs-built_in">sudo</span> a2enmod headers<br><span class="hljs-built_in">sudo</span> a2enmod <span class="hljs-built_in">env</span><br><span class="hljs-built_in">sudo</span> a2enmod <span class="hljs-built_in">dir</span><br><span class="hljs-built_in">sudo</span> a2enmod mime<br></code></pre></td></tr></tbody></table></figure><p></p><p>最后再重启Apache服务</p><p></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> systemctl restart apache2<br></code></pre></td></tr></tbody></table></figure><p></p><p><img src="https://imgbed.scubot.com/owncloud-5.png"></p></li></ol><h3 id="在网站上完成安装">在网站上完成安装</h3><p>在前往网站安装之前，需要现在服务器里做好权限的管理：</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /var/www/owncloud<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> data<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">mkdir</span> apps-external<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R www-data:www-data data<br><span class="hljs-built_in">sudo</span> <span class="hljs-built_in">chown</span> -R www-data:www-data apps-external <span class="hljs-comment"># 修改权限</span><br></code></pre></td></tr></tbody></table></figure><p>完成以上步骤之后，访问http://serverip/owncloud页面，选择MariaDB作为数据库，填入之前设置好的数据库名称，数据库用户名称，数据库密码就可以。</p><p><img src="https://imgbed.scubot.com/owncloud-6.png"></p><p>完成安装之后就可以进到云端了。</p><p><img src="https://imgbed.scubot.com/owncloud-7.png"></p><h2 id="配置https">配置https</h2><blockquote><p>需要一个备案过的域名，我是用了csgowiki.top的子域名cloud.csgowiki.top来配置的。</p></blockquote><h3 id="申请ssl证书">申请SSL证书</h3><p>在域名服务商那里(阿里云)就可以申请免费的证书，阿里云可以申请一年的。</p><p><img src="https://imgbed.scubot.com/owncloud-8.png"></p><p>选择Apache服务器类型，下载证书压缩包。</p><p>解压之后可以获得三个文件：<code>xxx_public.crt</code>、<code>xxx.key</code>和<code>xxx_chain.crt</code></p><h3 id="上传ssl证书">上传SSL证书</h3><ol type="1"><li>创建文件夹：<code>sudo mkdir /etc/apache2/cert</code></li><li>将三个证书文件都上传到新建的文件夹下</li></ol><h3 id="修改apache配置">修改Apache配置</h3><ol type="1"><li><p>设置监听443端口：<code>vim /etc/apache2/ports.conf</code>，应该如图所示，如果相同就不用修改。</p><p><img src="https://imgbed.scubot.com/owncloud-9.png"></p></li><li><p>配置apache参数：<code>sudo vim /etc/apache2/sites-enabled/000-default.conf</code></p><p>对应修改：</p><p></p><figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-section">&lt;VirtualHost *<span class="hljs-number">:443</span>&gt;</span><br>    <span class="hljs-attribute">SSLEngine</span> <span class="hljs-literal">on</span> # 开启SSL<br>    <span class="hljs-attribute">SSLProtocol</span> <span class="hljs-literal">all</span> -SSLv2 -SSLv3<br>    <span class="hljs-attribute">SSLCipherSuite</span> HIGH:!RC4:!MD5:!aNULL:!eNULL:!NULL:!DH:!EDH:!EXP:+MEDIUM<br>    <span class="hljs-attribute">SSLHonorCipherOrder</span> <span class="hljs-literal">on</span><br><br>    <span class="hljs-attribute">SSLCertificateFile</span> cert/xxx_public.crt     # public文件路径<br>    <span class="hljs-attribute">SSLCertificateKeyFile</span> cert/xxx.key         # key文件路径<br>    <span class="hljs-attribute">SSLCertificateChainFile</span> cert/xxx_chain.crt # chain文件路径<br><br>    <span class="hljs-attribute">ServerAdmin</span> webmaster@localhost<br>    <span class="hljs-attribute">DocumentRoot</span> /var/www/html<br>    <span class="hljs-attribute">ServerName</span> www.xxx.com   # 你的域名<br><br>    <span class="hljs-attribute">ErrorLog</span> <span class="hljs-variable">${APACHE_LOG_DIR}</span>/error.log<br>    <span class="hljs-attribute">CustomLog</span> <span class="hljs-variable">${APACHE_LOG_DIR}</span>/access.log combined<br><span class="hljs-section">&lt;/VirtualHost&gt;</span><br><span class="hljs-section">&lt;VirtualHost *<span class="hljs-number">:80</span>&gt;</span><br><span class="hljs-attribute">RewriteEngine</span> <span class="hljs-literal">on</span> # 重定向引擎开启，将<span class="hljs-number">80</span>端口服务重定向到<span class="hljs-number">443</span><br><span class="hljs-attribute">RewriteCond</span>   <span class="hljs-variable">%{HTTPS}</span> !=<span class="hljs-literal">on</span><br><span class="hljs-attribute">RewriteRule</span>   ^(.*)  https://<span class="hljs-variable">%{SERVER_NAME}</span>$<span class="hljs-number">1</span><span class="hljs-meta"> [L,R=301]</span><br><span class="hljs-section">&lt;/VirtualHost&gt;</span><br></code></pre></td></tr></tbody></table></figure><p></p></li><li><p>开启ssl模块：<code>sudo a2enmod ssl</code></p></li><li><p>重启apache服务：<code>sudo systemctl restart apache2</code></p></li></ol><p>配置结束后就可以通过域名直接https访问网站了。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;一步一步从购买服务器开始，记录搭建私人云盘的过程。我是用的是&lt;code&gt;Ubuntu 20.04.1 LTS 64bit&lt;/code&gt;与OwnCloud搭建的。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://blog.scubot.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="服务器" scheme="https://blog.scubot.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>计算机图形学-纹理</title>
    <link href="https://blog.scubot.com/article/ee3e/"/>
    <id>https://blog.scubot.com/article/ee3e/</id>
    <published>2020-12-16T06:21:54.000Z</published>
    <updated>2024-08-20T00:57:09.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>纹理映射是着色部分的内容，包括了抗混叠等技术。</p><span id="more"></span><h2 id="重心坐标-barycentric-coordinates">重心坐标 BarycentricCoordinates</h2><p>重心坐标是定义在三角形上的，表示为<span class="math inline">\((\alpha, \beta, \gamma)\)</span>，满足：</p><p><span class="math display">\[(x, y) = \alpha A + \beta B + \gamma C \\ \alpha + \beta + \gamma = 1\]</span> 当点在三角形内时，满足： <span class="math display">\[\alpha &gt; 0 \wedge \beta &gt; 0 \wedge \gamma &gt; 0\]</span> 重心坐标可以通过面积比求出，如图</p><p><img src="https://imgbed.scubot.com/CG-5-1.png" style="zoom:50%;"></p><p>除了用面积算，还可以直接通过笛卡尔坐标系下的坐标进行计算</p><p><img src="https://imgbed.scubot.com/CG-5-2.png" style="zoom:50%;"></p><h3 id="使用重心坐标进行插值">使用重心坐标进行插值</h3><p>对需要插值的对象也用重心坐标的形式表示</p><p>重心坐标不能保证投影变换后坐标不变，所以对于深度信息等需要现在三维空间中插值，再投影到屏幕空间。</p><h2 id="纹理映射">纹理映射</h2><p>对于光栅化之后的点<code>(u,v)</code>进行纹理映射：<code>texture.sample(u,v)</code>，采样得到的值可以替代<em>Blinn-Phong</em>反射模型中漫反射光照中的<span class="math inline">\(K_d\)</span>参数，用来表示物体表面本来的颜色。</p><p>在纹理采样过程中会遇到一些问题：</p><h3 id="纹理放大">纹理放大</h3>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;纹理映射是着色部分的内容，包括了抗混叠等技术。&lt;/p&gt;</summary>
    
    
    
    <category term="学习记录" scheme="https://blog.scubot.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Computer Graphics" scheme="https://blog.scubot.com/tags/Computer-Graphics/"/>
    
  </entry>
  
  <entry>
    <title>CSGO-RealTimeMap开发记录</title>
    <link href="https://blog.scubot.com/article/c038/"/>
    <id>https://blog.scubot.com/article/c038/</id>
    <published>2020-12-05T13:53:25.000Z</published>
    <updated>2024-08-20T00:57:09.091Z</updated>
    
    <content type="html"><![CDATA[<h2 id="介绍">介绍</h2><p>CSGO-RealTimeMap是一个致力于将CSGO服务器内的信息实时显示到网页上的一个无数据库项目，灵感来源自Minecraft的插件dynmap。</p><p>插件分为两部分：游戏服务器的sourcemod插件和服务器本地的网站。</p><p>项目开源地址：<a href="https://github.com/hx-w/CSGO-RealTimeMap">GitHub</a>。</p><p>开发日期：2020-12-3至2021-01-01。</p><span id="more"></span><h3 id="技术栈">技术栈</h3><ul><li><p><strong>flask</strong> 做网页显示。</p></li><li><p><strong>websocket</strong> 实现前端与数据的同步。</p></li><li><p><strong>sourcemod</strong> 实现游戏内数据向网站的同步。</p></li></ul><p>最初版演示见<a href="https://www.bilibili.com/video/BV1mt4y1a7YG/">B站视频</a>。</p><h2 id="功能目标">功能目标</h2><ul><li>易于部署&amp;维护的插件/网站结构</li><li>网页上平滑的玩家移动</li><li>丰富的图标显示：玩家朝向、所持武器、所属阵营等</li><li>详细的服务器内信息：玩家在线时间、击杀情况等</li><li>在线聊天系统</li></ul><h2 id="开发记录">开发记录</h2><h4 id="section">2020-12-5</h4><p><strong>feature</strong></p><ol type="1"><li><p>更新了道具效果的显示：</p><figure><img src="https://imgbed.scubot.com/RTM-1.jpg" alt="道具效果"><figcaption aria-hidden="true">道具效果</figcaption></figure></li><li><p>更多的关键帧，现在关键帧增加到了10，网页上人物移动的显示效果更加流畅</p></li></ol><p><strong>bug</strong></p><ol type="1"><li>内存不释放，怀疑是道具的记录引起的</li><li>程序运行日志未删除</li></ol><h4 id="section-1">2020-12-6</h4><p><strong>bug fix&amp; feature</strong> 1.解决内存不释放的问题，采用garbage collector主动释放内存。 &gt;python中的dict删除某个元素之后并不会直接释放内存，需要用<code>gc.collect()</code>来主动释放2. 实现服务器到网页的聊天信息显示(server2web) 3.实现网页到服务器的聊天信息显示(web2server) <img src="https://imgbed.scubot.com/RTM-2.jpg" alt="聊天信息"></p><p><strong>bug</strong> 1. 人物移动在网页上显示越来越滞后</p><h4 id="section-2">2020-12-7</h4><p><strong>feature</strong> 1. 增加诱饵弹的道具显示效果 2.重构网站的消息机制，构造消息队列<code>MessageQueue</code>用于系统化的处理从服务器到网站的数据3. 关键帧减少为5，否则会有明显数据滞后问题</p><blockquote><p>游戏服务器向网站发消息</p></blockquote><figure><img src="https://imgbed.scubot.com/RTM-4.png" alt="server2web"><figcaption aria-hidden="true">server2web</figcaption></figure><blockquote><p>网站向服务器发消息</p></blockquote><figure><img src="https://imgbed.scubot.com/RTM-3.png" alt="web2server"><figcaption aria-hidden="true">web2server</figcaption></figure><blockquote><p><code>MessageQueue</code>结构</p></blockquote><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> queue<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MessageQueue</span>():<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, qMapSz=<span class="hljs-number">1</span>, qPlayerMoveSz=<span class="hljs-number">100</span>, qUtilitySz=<span class="hljs-number">10</span>, q2ServerMsgSz=<span class="hljs-number">10</span>, q2WebMsgSz=<span class="hljs-number">5</span></span>):<br>        <span class="hljs-string">'''</span><br><span class="hljs-string">        qMap: [mapname]</span><br><span class="hljs-string">        qPlayersMove: [[posX, posY, name, steam3id, clientid]]</span><br><span class="hljs-string">        qUtility: [utid, uttype, posX, posY]</span><br><span class="hljs-string">        q2WebMsg: [ip/name, msg]</span><br><span class="hljs-string">        q2ServerMsg: [ip, msg]</span><br><span class="hljs-string">        '''</span><br>        <span class="hljs-variable language_">self</span>.qMsg = {<br>            <span class="hljs-string">"qMap"</span>: queue.Queue(maxsize=qMapSz),<br>            <span class="hljs-string">"qPlayersMove"</span>: queue.Queue(maxsize=qPlayerMoveSz),<br>            <span class="hljs-string">"qUtility"</span>: queue.Queue(maxsize=qUtilitySz),<br>            <span class="hljs-string">"q2WebMsg"</span>: queue.Queue(maxsize=q2WebMsgSz),<br>            <span class="hljs-string">"q2ServerMsg"</span>: queue.Queue(maxsize=q2ServerMsgSz),<br>        }<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">qPut</span>(<span class="hljs-params">self, qName: <span class="hljs-built_in">str</span>, value: <span class="hljs-built_in">list</span>=[]</span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.qMsg[qName].full(): <span class="hljs-variable language_">self</span>.qMsg[qName].get_nowait()<br>            <span class="hljs-variable language_">self</span>.qMsg[qName].put_nowait(value)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">"Queue({}) Put Error!"</span>.<span class="hljs-built_in">format</span>(qName))<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">qGetAllMsg_noWait</span>(<span class="hljs-params">self, qExcept=[]</span>):<br>        allMsg = {}<br>        <span class="hljs-keyword">for</span> key, value <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.qMsg.items():<br>            <span class="hljs-keyword">if</span> key <span class="hljs-keyword">in</span> qExcept: <span class="hljs-keyword">continue</span><br>            allMsg[key] = [] <span class="hljs-keyword">if</span> value.empty() <span class="hljs-keyword">else</span> value.get_nowait()<br>        <span class="hljs-keyword">return</span> allMsg<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">qGet_noWait</span>(<span class="hljs-params">self, qName: <span class="hljs-built_in">str</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-comment"># success, Msg</span><br>            <span class="hljs-keyword">return</span> (<span class="hljs-literal">False</span>, []) <span class="hljs-keyword">if</span> <span class="hljs-variable language_">self</span>.qMsg[qName].empty() <span class="hljs-keyword">else</span> (<span class="hljs-literal">True</span>, <span class="hljs-variable language_">self</span>.qMsg[qName].get_nowait())<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">raise</span> Exception(<span class="hljs-string">"Queue({}) Get Error!"</span>.<span class="hljs-built_in">format</span>(qName))<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">qClearAll</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">for</span> key <span class="hljs-keyword">in</span> <span class="hljs-variable language_">self</span>.qMsg.keys():<br>            <span class="hljs-variable language_">self</span>.qMsg[key] = queue.Queue()<br><br></code></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt;
&lt;p&gt;CSGO-RealTimeMap是一个致力于将CSGO服务器内的信息实时显示到网页上的一个无数据库项目，灵感来源自Minecraft的插件dynmap。&lt;/p&gt;
&lt;p&gt;插件分为两部分：游戏服务器的sourcemod插件和服务器本地的网站。&lt;/p&gt;
&lt;p&gt;项目开源地址：&lt;a href=&quot;https://github.com/hx-w/CSGO-RealTimeMap&quot;&gt;GitHub&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;开发日期：2020-12-3至2021-01-01。&lt;/p&gt;</summary>
    
    
    
    <category term="教程" scheme="https://blog.scubot.com/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="CSGO" scheme="https://blog.scubot.com/tags/CSGO/"/>
    
    <category term="sourcemod" scheme="https://blog.scubot.com/tags/sourcemod/"/>
    
  </entry>
  
  <entry>
    <title>计算机图形学-实时渲染管线</title>
    <link href="https://blog.scubot.com/article/1fe/"/>
    <id>https://blog.scubot.com/article/1fe/</id>
    <published>2020-12-01T02:17:35.000Z</published>
    <updated>2024-08-20T00:57:09.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>记录描述计算机图形学中 <strong>实时渲染管线</strong> (Real-timeRendering Pipeline)的内容。</p><span id="more"></span><h2 id="渲染流水线">渲染流水线</h2><p><img src="https://imgbed.scubot.com/CG-4-1.png"></p><p>整个流程都是在硬件(显卡)中实现的。</p><p>整理流程可以认为包括三大部分：几何图形处理(顶点和三角形变换)，光栅化和Fragment处理。</p><blockquote><p>Fragments可以理解为像素，如果做了MSAA，那么多个Fragments会组成一个像素。</p></blockquote><p>将我们记录的计算机图形学中的渲染流程对应到流水线上：</p><h3 id="mvp变换">MVP变换</h3><p><img src="https://imgbed.scubot.com/CG-4-2.png"></p><p>在<code>Vertex Processing</code>过程中完成。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;记录描述计算机图形学中 &lt;strong&gt;实时渲染管线&lt;/strong&gt; (Real-time
Rendering Pipeline)的内容。&lt;/p&gt;</summary>
    
    
    
    <category term="学习记录" scheme="https://blog.scubot.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Computer Graphics" scheme="https://blog.scubot.com/tags/Computer-Graphics/"/>
    
  </entry>
  
  <entry>
    <title>计算机图形学-着色</title>
    <link href="https://blog.scubot.com/article/313c/"/>
    <id>https://blog.scubot.com/article/313c/</id>
    <published>2020-11-30T11:54:32.000Z</published>
    <updated>2024-08-20T00:57:09.095Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>本文章用来记录计算机图形学中与 <strong>着色(shading)</strong>相关的知识。</p><span id="more"></span><h2 id="着色的定义">着色的定义</h2><p>在绘画过程中引入<strong>明暗</strong>或<strong>颜色</strong>的不同。</p><blockquote><p>"The darkening or coloring of an illustration or diagram withparallel lines or a block of color."</p><p>—Merriam-Webster Dictionary</p></blockquote><p>在计算机图形学中，可以理解为：对不同的物体应用不同材质的过程。</p><h2 id="基础着色模型">基础着色模型</h2><h3 id="blinn-phong光照模型blinn-phong-reflectance-model"><em>Blinn-Phong</em>光照模型—<em>Blinn-Phong</em>Reflectance Model</h3><p><em>Blinn-Phong</em>光照模型认为图像中体现在物体上的光分为三部分：</p><ul><li><strong>高光</strong>(Specular highlights)</li><li><strong>漫反射</strong>(Diffuse reflection)</li><li><strong>环境光</strong>(Ambient lighting)</li></ul><p><img src="https://imgbed.scubot.com/CG-3-1.png" style="zoom:50%;"></p><p>对物体表面的每一个点抽象出以下属性：</p><ul><li>观察方向 <span class="math inline">\(\vec v\)</span></li><li>该点(局部平面)的法线向量 <span class="math inline">\(\vecn\)</span></li><li>光照方向 <span class="math inline">\(\vec l\)</span></li><li>该点(平面)的参数：颜色、反光系数等</li></ul><p><strong>着色操作只考虑物体局部的显示，不将阴影或其他物体考虑在内，即shading</strong><span class="math inline">\(\not =\)</span><strong>shadow</strong>。</p><p>下面介绍<em>Blinn-Phong</em>模型中光照的三个部分。</p><h4 id="漫反射-diffuse-reflection">漫反射 Diffuse reflection</h4><p>对于漫反射考虑以下因素的影响：</p><ol type="1"><li><p>着色点上光的接收</p><p>光是一种能量形式，着色点周围单位面积接受到的光能量越大，显示的就应该越亮。</p><p>根据上述分析引出 <em>Lambert's</em>余弦定理：着色点接受到的光照的强度与光照方向和平面法线方向的余弦成正比。</p><p><img src="https://imgbed.scubot.com/CG-3-2.png"></p></li><li><p>光能量的衰弱</p><p>假设点光源在某一时刻发出的光照能量在三维空间中以球壳形式传播且没有能量损耗，那么根据能量守恒，任意时刻球壳上的光的能量总和都应该相等。</p><p>根据球面积公式<span class="math inline">\(S=4\piR^2\)</span>，着色点距离光源<span class="math inline">\(r\)</span>，着色点收到的光能量为<span class="math inline">\(I\)</span>，那么<span class="math inline">\(I\propto 1/r^2\)</span>，即光照强度与离光源的距离呈现<strong>平方反比</strong> 关系。</p><blockquote><p>这里将光能与光强做等价处理并不严谨，不过鉴于<em>Blinn-Phong</em>本身就是个简化模型，就不多考虑其中的问题。</p></blockquote></li></ol><p>根据上面两点可以写出着色点的漫反射光照强度表达式：</p><p><span class="math display">\[L_d = k_d(I/r^2)\max(0, \vec n \cdot \vec l)\]</span></p><p>其中：<span class="math inline">\(L_d\)</span>为着色点的漫反射光照强度，<span class="math inline">\(k_d\)</span>为漫反射参数(颜色等)，<span class="math inline">\(I\)</span> 为光源处光照强度，<span class="math inline">\(r\)</span> 为着色点到光源处距离。</p><blockquote><p>解释：</p><ol type="1"><li><span class="math inline">\(\vec n \cdot \vec l\)</span>如果为负数，则认为该点不被照亮(不考虑折射等)。</li><li><span class="math inline">\(k_d\)</span>表示为单个小数时表示物体的光反射率，影响物体的亮暗程度；如果将<span class="math inline">\(k_d\)</span>表示为向量即可表示物体对不同颜色的反射率，影响物体的颜色。</li><li><span class="math inline">\(L_d\)</span>的表达式中没有观察方向<span class="math inline">\(\vecv\)</span>的参与，因为模型中假设了某点的漫反射总是均匀的，不管从哪个角度观察都能看到同样的漫反射效果，故与<span class="math inline">\(\vec v\)</span>无关。</li><li>表示方向的向量：<span class="math inline">\(\vec n\)</span>，<span class="math inline">\(\vec v\)</span>和<span class="math inline">\(\vecl\)</span>都是单位向量。</li></ol></blockquote><p>漫反射示例：</p><p><img src="https://imgbed.scubot.com/CG-3-3.png"></p><h4 id="高光-specular-highlights">高光 Specular highlights</h4><p>假设光照在物体的局部平面发生镜面反射，镜面反射的光线方向是<span class="math inline">\(\vec R\)</span>，那么如果观察方向<span class="math inline">\(\vec v\)</span>与<span class="math inline">\(\vecR\)</span>接近时会观测到高光。</p><p><img src="https://imgbed.scubot.com/CG-3-4.png" style="zoom:50%;"></p><p><span class="math inline">\(\vecR\)</span>的计算比较麻烦，<em>Blinn-Phong</em>模型中引入<strong>半程向量</strong>(halfvector)来解决这个问题。</p><p>如果<span class="math inline">\(\vec v\)</span>与<span class="math inline">\(\vec R\)</span>很接近，那么<span class="math inline">\(\vec n\)</span>与<span class="math inline">\(\vecl\)</span>和<span class="math inline">\(\vecv\)</span>的角平分线的方向向量很接近，定义半程向量<span class="math inline">\(\vec h\)</span>为<span class="math inline">\(\vecl\)</span>和<span class="math inline">\(\vecv\)</span>的角平分线方向的单位向量：<span class="math inline">\(\vec h =\rm{bisector}(\vec v, \vec l) = \frac{\vec v + \vec l}{\mid \mid \vec v+ \vec l \mid \mid}\)</span></p><blockquote><p>推导<span class="math inline">\(\vec R=(X_R, Y_R, Z_R)\)</span>：<span class="math display">\[\begin{align*}\frac{\vec R + \vec l}{\mid \mid \vec R + \vec l \mid \mid} &amp;= \vecn \\[2ex]\begin{pmatrix}\frac{X_l + X_R}{\sqrt{(X_l + X_R)^2 + (Y_l + Y_R)^2 + (Z_l + Z_R)^2}}\\ \frac{Y_l + Y_R}{\sqrt{(X_l + X_R)^2 + (Y_l + Y_R)^2 + (Z_l +Z_R)^2}} \\ \frac{Z_l + Z_R}{\sqrt{(X_l + X_R)^2 + (Y_l + Y_R)^2 + (Z_l+ Z_R)^2}}\end{pmatrix} ^\top&amp;= (X_n, Y_n, Z_n)\end{align*}\]</span> 可以列出三个等式，求三个分量，计算量太大不继续算了。</p></blockquote><p><img src="https://imgbed.scubot.com/CG-3-5.png" style="zoom:50%;"></p><p>可以写出着色点的高光亮度表达式： <span class="math display">\[\begin{align*}L_s &amp;= k_s(I/r^2) \max (0, \cos \alpha) ^ p \\ &amp;= k_s(I/r^2)\max(0, \vec n \cdot \vec h)\end{align*}\]</span> 其中<span class="math inline">\(L_s\)</span>为着色点的高光亮度，<span class="math inline">\(k_s\)</span>为高光反射系数， <span class="math inline">\(p\)</span>表示高光敏感度。</p><blockquote><p>解释：</p><ol type="1"><li><p><em>Blinn-Phong</em>光照模型中使用<span class="math inline">\(\vec n\)</span>与<span class="math inline">\(\vech\)</span>来表示高光角度，<em>Phong</em>光照模型中使用<span class="math inline">\(\vec R\)</span>与<span class="math inline">\(\vecv\)</span>来表示高光角度。</p></li><li><p>用指数<span class="math inline">\(p\)</span>来表示可以产生高光的角度区间(敏感程度)，<span class="math inline">\(p\)</span>越大，能看到高光的角度就越小：</p><p><img src="https://imgbed.scubot.com/CG-3-6.png"></p></li></ol></blockquote><p>漫反射+高光示例：</p><p><img src="https://imgbed.scubot.com/CG-3-7.png"></p><h4 id="环境光-ambient-lighting">环境光 Ambient lighting</h4><p>真实的环境光照很复杂，<em>Blinn-Phong</em>模型做了一个大胆的假设：所有着色点的环境光照均相同：<span class="math display">\[L_a = k_a I_a\]</span> 其中：<span class="math inline">\(L_a\)</span>为着色点环境光的光照强度，<span class="math inline">\(k_a\)</span>是环境光反射系数， <span class="math inline">\(I_a\)</span>为环境光强度常数。</p><blockquote><p>解释：</p><ol type="1"><li>在这个模型中环境光与观测方向和光照方向均无关。</li><li>可以将环境光理解成物体本来的颜色，使得不是所有地方都是黑色的。</li><li>精确地计算需要利用到环境光照的知识(不在本文章)。</li></ol></blockquote><h4 id="模型效果">模型效果</h4><p>将以上三种光照效果加在一起，就可以得到某一着色点的光照强度： <span class="math display">\[\begin{align*}L &amp;= L_a + L_d + L_s \\&amp;= k_a I_a + k_d(I/r^2 )\max(0, \vec n \cdot \vec l) + k_s (I /r^2)\max(0, \vec n \cdot \vec h) ^ p\end{align*}\]</span> 效果：</p><p><img src="https://imgbed.scubot.com/CG-3-8.png"></p><h2 id="着色频率">着色频率</h2><p>三种不同的着色方式：</p><ol type="1"><li><p><strong>Flatshading</strong>：以一个三角形为单位，三角形内部颜色不变化，只针对三角形一个点做着色处理就可以对三角形中所有点应用。(逐三角形)</p><p><img src="https://imgbed.scubot.com/CG-3-9.png"></p></li><li><p><strong>Gouraudshading</strong>：对三角形三个顶点求出其法线向量，并算出三个顶点的着色情况，再在三角形内部对三个顶点的颜色做插值。(逐顶点)</p><blockquote><p>关于顶点的发现向量计算：<a href="#顶点法线向量">顶点法线向量</a></p></blockquote><p><img src="https://imgbed.scubot.com/CG-3-10.png"></p></li><li><p><strong>Phongshading</strong>：对三角形三个顶点求出其法线向量，对三角形内部每个点插值出对应的法线，对每一个像素进行着色。(逐像素)</p><blockquote><p><strong>Phongshading</strong>是一种着色频率，与<em>Blinn-Phong</em>着色模型不是一个概念。</p><p>关于像素的法线插值：<a href="#像素法线插值">像素法线插值</a></p></blockquote><p><img src="https://imgbed.scubot.com/CG-3-11.png"></p></li></ol><p>当模型足够复杂(顶点数量足够多时)，Flat shading的效果不一定比Phongshading(计算量大)差。而当模型过于复杂时，顶点数量多余屏幕像素数量，则Flatshading的计算量比Phongshading还要大，具体采取什么样的着色频率要根据实际情况考虑。</p><p><img src="https://imgbed.scubot.com/CG-3-12.png"></p><h3 id="顶点法线向量">顶点法线向量</h3><p>任何一个顶点都与周围若干个三角形所关联，可以简单的认为该点的法线向量是周围三角形的法线向量的平均：</p><p><img src="https://imgbed.scubot.com/CG-3-13.png"> <span class="math display">\[\vec N_v = \frac {\sum_i \vec N_i}{ \mid \mid \sum_i \vec N_i \mid \mid}\]</span></p><blockquote><p>改进：认为每个三角形面积越大权重越大，取得法线的加权平均，效果更好。</p></blockquote><h3 id="像素法线插值">像素法线插值</h3><p>使用<strong>重心坐标</strong>(Barycentricinterpolation)插值，后归一化每个向量。详细的插值方法见后续。</p><p><img src="https://imgbed.scubot.com/CG-3-14.png"></p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2&gt;
&lt;p&gt;本文章用来记录计算机图形学中与 &lt;strong&gt;着色(shading)&lt;/strong&gt;
相关的知识。&lt;/p&gt;</summary>
    
    
    
    <category term="学习记录" scheme="https://blog.scubot.com/categories/%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Computer Graphics" scheme="https://blog.scubot.com/tags/Computer-Graphics/"/>
    
  </entry>
  
</feed>
